  5770WDS V7R3M0  160422 RN        IBM ILE RPG             NOXDB2/EX01DEMO          DKSRV133   07-12-18 02:29:12        Page      1
   Command  . . . . . . . . . . . . :   CRTBNDRPG
     Issued by  . . . . . . . . . . :     NLI
   Program  . . . . . . . . . . . . :   EX01DEMO
     Library  . . . . . . . . . . . :     NOXDB2
   Text 'description' . . . . . . . :   *SRCMBRTXT
   Source stream file   . . . . . . :   examples/ex01Demo.rpgle
     CCSID  . . . . . . . . . . . . :     500
   Text 'description' . . . . . . . :
   Last Change  . . . . . . . . . . :   07-12-18  00:36:15
   Generation severity level  . . . :   10
   Default activation group . . . . :   *YES
   Compiler options . . . . . . . . :   *XREF      *GEN       *NOSECLVL  *SHOWCPY
                                        *EXPDDS    *EXT       *NOSHOWSKP *NOSRCSTMT
                                        *DEBUGIO   *UNREF     *NOEVENTF
   Debugging views  . . . . . . . . :   *LIST
   Debug encryption key . . . . . . :   *NONE
   Output . . . . . . . . . . . . . :   *PRINT
   Optimization level . . . . . . . :   *NONE
   Source listing indentation . . . :   *NONE
   Type conversion options  . . . . :   *NONE
   Sort sequence  . . . . . . . . . :   *HEX
   Language identifier  . . . . . . :   *JOBRUN
   Replace program  . . . . . . . . :   *YES
   User profile . . . . . . . . . . :   *USER
   Authority  . . . . . . . . . . . :   *LIBCRTAUT
   Truncate numeric . . . . . . . . :   *YES
   Fix numeric  . . . . . . . . . . :   *NONE
   Target release . . . . . . . . . :   *CURRENT
   Allow null values  . . . . . . . :   *NO
   Define condition names . . . . . :   *NONE
   Enable performance collection  . :   *PEP
   Profiling data . . . . . . . . . :   *NOCOL
   Licensed Internal Code options . :
   Generate program interface . . . :   *NO
   Include directory  . . . . . . . :   ./..
                                    :   /prj/noxdb
   Preprocessor options . . . . . . :   *NONE
  5770WDS V7R3M0  160422 RN        IBM ILE RPG             NOXDB2/EX01DEMO          DKSRV133   07-12-18 02:29:12        Page      2
 Line   <---------------------- Source Specifications ----------------------------------------------------->  Do  Change Src Seq
 Number ....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+...10  Num Date   Id  Number
                           S o u r c e   L i s t i n g
      1 **FREE                                                                                                               000001
      2         // -------------------------------------------------------------                                             000002
      3         // noxDB - Not Only Xml - Its JSON, XML, SQL and more                                                        000003
      4         //                                                                                                           000004
      5         // This tutorial will show all the features, from a JSON                                                     000005
      6         // and SQL perspective                                                                                       000006
      7         //                                                                                                           000007
      8         // Design:  Niels Liisberg                                                                                   000008
      9         // Project: Sitemule.com                                                                                     000009
     10         //                                                                                                           000010
     11         // try/build:                                                                                                000011
     12         // cd '/prj/noxdbutf8'                                                                                       000012
     13         // addlible noxdb2                                                                                           000013
     14         // call                                                                                                      000014
     15         // -------------------------------------------------------------                                             000015
     16                                                                                                                      000016
     17         Ctl-Opt BndDir('NOXDB') dftactgrp(*NO) ACTGRP('QILE'); //  CCSID(*EXACT) ; // CCSID(*CHAR:*J                 000017
  ...   OBRUN) ; // CCSID(*CHAR:*UTF8);
     18                                                                                                                      000018
     19                                                                                                                      000019
     20         //------------------------------------------------------------- *                                            000020
     21                                                                                                                      000021
     22         /include 'headers/noxDB2JSON.rpgle'                                                                           000022
 Line   <---------------------- Source Specifications ----------------------------><---- Comments ----> Do  Page  Change Src Seq
 Number ....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+...10 Num Line  Date   Id  Number
         *--------------------------------------------------------------------------------------------*
         * RPG member name  . . . . . :  noxdbJSON+                                                   *                     1
         * External name  . . . . . . :  ./headers/noxDB2JSON.rpgle                                    *                     1
         * Last change  . . . . . . . :  06-12-18  23:40:39                                           *                     1
         *--------------------------------------------------------------------------------------------*
 Line   <---------------------- Source Specifications ----------------------------------------------------->  Do  Change Src Seq
 Number ....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+...10  Num Date   Id  Number
     23+**FREE                                                                                                              1000001
     24+        // ---------------------------------------------------------------------- *                                 1000002
     25+        // This is the prototype for noxDB - JSON, XML and SQL made easy                                            1000003
     26+        // Use the NOXDB binddir when creating your program and include this                                        1000004
     27+        // prototypes like:                                                                                         1000005
  5770WDS V7R3M0  160422 RN        IBM ILE RPG             NOXDB2/EX01DEMO          DKSRV133   07-12-18 02:29:12        Page      3
 Line   <---------------------- Source Specifications ----------------------------------------------------->  Do  Change Src Seq
 Number ....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+...10  Num Date   Id  Number
     28+                                                                                                                    1000006
     29+        //     Ctl-Opt BndDir('NOXDB') dftactgrp(*NO) ACTGRP('QILE');                                               1000007
     30+        //     /include 'headers/JSONPARSER.rpgle'                                                                  1000008
     31+                                                                                                                    1000009
     32+        // Note: Both XMLPARSER and JSONPARSER headers are autogenerated from                                       1000010
     33+        // the NOXDB header. so please do not make any changes the there headerfile                                 1000011
     34+                                                                                                                    1000012
     35+        // ---------------------------------------------------------------------- *                                 1000013
     36+      /if defined( json_DEF)                                                                                        1000014
             LINES EXCLUDED: 1
     37+      /endif                                                                                                        1000016
     38+      /define  json_DEF                                                                                             1000017
     39+                                                                                                                    1000018
     40+        // 1M minus length of 4 bytes                                                                               1000019
         *--------------------------------------------------------------------*
         * Compiler Options in Effect:                                        *
         *--------------------------------------------------------------------*
         *  Text 'description' . . . . . . . :                                *
         *  Generation severity level  . . . :   10                           *
         *  Default activation group . . . . :   *NO                          *
         *  Compiler options . . . . . . . . :   *XREF      *GEN              *
         *                                       *NOSECLVL  *SHOWCPY          *
         *                                       *EXPDDS    *EXT              *
         *                                       *NOSHOWSKP *NOSRCSTMT        *
         *                                       *DEBUGIO   *UNREF            *
         *                                       *NOEVENTF                    *
         *  Optimization level . . . . . . . :   *NONE                        *
         *  Source listing indentation . . . :   *NONE                        *
         *  Type conversion options  . . . . :   *NONE                        *
         *  Sort sequence  . . . . . . . . . :   *HEX                         *
         *  Language identifier  . . . . . . :   *JOBRUN                      *
         *  User profile . . . . . . . . . . :   *USER                        *
         *  Authority  . . . . . . . . . . . :   *LIBCRTAUT                   *
         *  Truncate numeric . . . . . . . . :   *YES                         *
         *  Fix numeric  . . . . . . . . . . :   *NONE                        *
         *  Allow null values  . . . . . . . :   *NO                          *
         *  Storage model . . .  . . . . . . :   *SNGLVL                      *
         *  Binding directory from Command . :   *NONE                        *
         *  Binding directory from Source  . :   NOXDB                        *
         *    Library  . . . . . . . . . . . :     *LIBL                      *
         *  Activation group . . . . . . . . :   QILE                         *
         *  Enable performance collection  . :   *PEP                         *
         *  Profiling data . . . . . . . . . :   *NOCOL                       *
  5770WDS V7R3M0  160422 RN        IBM ILE RPG             NOXDB2/EX01DEMO          DKSRV133   07-12-18 02:29:12        Page      4
 Line   <---------------------- Source Specifications ----------------------------------------------------->  Do  Change Src Seq
 Number ....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+...10  Num Date   Id  Number
         *  Generate program interface . . . :   *NO                          *
         *--------------------------------------------------------------------*
     41+        Dcl-S UTF8 varchar(1048572) CCSID(*UTF8) Template;                                                          1000020
     42+        Dcl-C UTF8_BOM const(-1208);                                                                                1000021
     43+                                                                                                                    1000022
     44+        // ---------------------------------------------------------------------- *                                 1000023
     45+        // Type of a node:                                                                                          1000024
     46+        // ---------------------------------------------------------------------- *                                 1000025
     47+        Dcl-C json_UNKNOWN const(0);                                                                                1000026
     48+        Dcl-C json_OBJECT  const(1);                                                                                1000027
     49+        Dcl-C json_ARRAY   const(2);                                                                                1000028
     50+        Dcl-C json_EVAL    const(3);                                                                                1000029
     51+        Dcl-C json_POINTER_VALUE const(4);                                                                          1000030
     52+        Dcl-C json_VALUE   const(5);                                                                                1000031
     53+        Dcl-C json_ROOT    const(6);                                                                                1000032
     54+        Dcl-C json_LITERAL const(16);                                                                               1000033
     55+        Dcl-C json_OBJLINK const(17);                                                                               1000034
     56+        Dcl-C json_OBJREPLACE const(18);                                                                            1000035
     57+        Dcl-C json_OBJCOPY const(18);                                                                               1000036
     58+        Dcl-C json_BY_CONTEXT const(19);                                                                            1000037
     59+        Dcl-C json_OBJMOVE const(2048);                                                                             1000038
     60+                                                                                                                    1000039
     61+        // * Modifiers to "add" / "or" into "parseString" and "evaluate"                                            1000040
     62+        // !! Type - have to be backwards compat.                                                                   1000041
     63+        // Unlink the source and move it to dest.                                                                   1000042
     64+        Dcl-C json_MOVE_NODES const(2048);                                                                          1000043
     65+        // Allow strings ints and other values to                                                                   1000044
     66+        Dcl-C json_ALLOW_PRIMITIVES const(4096);                                                                    1000045
     67+                                                                                                                    1000046
     68+        // * Combinations:                                                                                          1000047
     69+        // json_PARSE  = json_EVAL + json_MOVE_NODES                                                                1000048
     70+        Dcl-C json_PARSE   const(2051);                                                                             1000049
     71+                                                                                                                    1000050
     72+        // Merge options:                                                                                           1000051
     73+        // Modifiers to "add" / "or" into "JSON_EVAL"                                                               1000052
     74+      /if not defined(MO_MERGE)                                                                                     1000053
     75+      /define  MO_MERGE                                                                                             1000054
     76+        // Only new elements are merged - existing                                                                  1000055
     77+        // are left untouched                                                                                       1000056
     78+        Dcl-C MO_MERGE_NEW const(256);                                                                              1000057
     79+        // Merge and replace only existing nodes.                                                                   1000058
     80+        Dcl-C MO_MERGE_MATCH const(512);                                                                            1000059
  5770WDS V7R3M0  160422 RN        IBM ILE RPG             NOXDB2/EX01DEMO          DKSRV133   07-12-18 02:29:12        Page      5
 Line   <---------------------- Source Specifications ----------------------------------------------------->  Do  Change Src Seq
 Number ....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+...10  Num Date   Id  Number
     81+        // Merge all: replace if it exists and                                                                      1000060
     82+        // append new nodes if not exists                                                                           1000061
     83+        Dcl-C MO_MERGE_REPLACE const(1024 );                                                                        1000062
     84+      /endif                                                                                                        1000063
     85+                                                                                                                    1000064
     86+        Dcl-C json_CHILD_LIST const('[0]');                                                                         1000065
     87+                                                                                                                    1000066
     88+        // ----------------------------------------------------------------------                                   1000067
     89+        // Returns node to the json_object tree                                                                     1000068
     90+        Dcl-PR json_ParseFile Pointer extproc(*CWIDEN:'nox_ParseFile');                                             1000069
     91+          // File to parse                                                                                          1000070
     92+          FileName       pointer value  options(*string);                                                           1000071
     93+        End-PR;                                                                                                     1000072
     94+                                                                                                                    1000073
     95+        // Returns node json_object tree                                                                            1000074
     96+        Dcl-PR json_ParseStringVC Pointer extproc(*CWIDEN:'nox_ParseStringVC');                                     1000075
     97+          // String to parse                                                                                        1000076
     98+          String         Like(UTF8) const options(*varsize);                                                        1000077
     99+        End-PR;                                                                                                     1000078
    100+                                                                                                                    1000079
    101+        // Set , or . for numeri decimal point                                                                      1000080
    102+        Dcl-PR json_setDecPoint  extproc(*CWIDEN : 'nox_SetDecPoint');                                              1000081
    103+          // decimal point char                                                                                     1000082
    104+          decPoint       char(1) const ccsid(*utf8);                                                                1000083
    105+        End-PR;                                                                                                     1000084
    106+                                                                                                                    1000085
    107+        // Bool true if errors occures                                                                              1000086
    108+        Dcl-PR json_Error Ind extproc(*CWIDEN:'nox_Error');                                                         1000087
    109+          // json_Object  node                                                                                      1000088
    110+          pNode          Pointer    value;                                                                          1000089
    111+        End-PR;                                                                                                     1000090
    112+                                                                                                                    1000091
    113+        // Return error description                                                                                 1000092
    114+        // NL-OK                                                                                                    1000093
    115+        Dcl-PR json_Message varchar(1024) extproc(*CWIDEN:'nox_MessageVC');                                         1000094
    116+          // json_Object                                                                                            1000095
    117+          pNode          Pointer    value;                                                                          1000096
    118+        End-PR;                                                                                                     1000097
    119+                                                                                                                    1000098
    120+        // Without parameters you will get the last internal error                                                  1000099
    121+        // Otherwise it will format an error object                                                                 1000100
    122+        // NL-OK                                                                                                    1000101
    123+        Dcl-PR json_GetMessageObject Pointer // Return error description                                            1000102
    124+                                   extproc(*CWIDEN:'nox_GetMessageObject');                                         1000103
  5770WDS V7R3M0  160422 RN        IBM ILE RPG             NOXDB2/EX01DEMO          DKSRV133   07-12-18 02:29:12        Page      6
 Line   <---------------------- Source Specifications ----------------------------------------------------->  Do  Change Src Seq
 Number ....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+...10  Num Date   Id  Number
    125+          MessageId      Like(UTF8) const options(*nopass:*varsize);                                                1000104
    126+          MessageData    Like(UTF8) const options(*nopass:*varsize);                                                1000105
    127+        End-PR;                                                                                                     1000106
    128+                                                                                                                    1000107
    129+        // simple courtesy function to return a {"success":true} object                                             1000108
    130+        // Return success:true object                                                                               1000109
    131+        Dcl-PR json_SuccessTrue Pointer extproc(*CWIDEN:'nox_SuccessTrue');                                         1000110
    132+          MessageId      Like(UTF8) const options(*nopass:*varsize);                                                1000111
    133+          MessageData    Like(UTF8) const options(*nopass:*varsize);                                                1000112
    134+        End-PR;                                                                                                     1000113
    135+                                                                                                                    1000114
    136+        // Returns pointer to node                                                                                  1000115
    137+        // NL-OK                                                                                                    1000116
    138+        Dcl-PR json_Locate Pointer extproc(*CWIDEN : 'nox_GetNodeVC');                                              1000117
    139+          // Pointer to tree or node                                                                                1000118
    140+          pNode          Pointer    value;                                                                          1000119
    141+          // location expression                                                                                    1000120
    142+          Expression     Like(UTF8) const options(*varsize);                                                        1000121
    143+        End-PR;                                                                                                     1000122
    144+                                                                                                                    1000123
    145+        // Returns pointer to node                                                                                  1000124
    146+        Dcl-PR json_LocateOrCreate Pointer extproc(*CWIDEN : 'nox_GetOrCreateNodeVC');                              1000125
    147+          // Pointer to tree or node                                                                                1000126
    148+          pNode          Pointer    value;                                                                          1000127
    149+          // location expression                                                                                    1000128
    150+          Expression     Like(UTF8) const options(*varsize);                                                        1000129
    151+        End-PR;                                                                                                     1000130
    152+                                                                                                                    1000131
    153+        // Returns 'ON' if node exists                                                                              1000132
    154+        Dcl-PR json_Has Ind extproc(*CWIDEN : 'nox_HasVC');                                                         1000133
    155+          // Pointer to tree or node                                                                                1000134
    156+          pNode          Pointer    value;                                                                          1000135
    157+          // Path to node                                                                                           1000136
    158+          NodeName       Like(UTF8) const options(*varsize);                                                        1000137
    159+        End-PR;                                                                                                     1000138
    160+                                                                                                                    1000139
    161+        // Returns 'ON' if node exists and has <> 0                                                                 1000140
    162+        Dcl-PR json_isTrue Ind extproc(*CWIDEN : 'nox_IsTrueVC');                                                   1000141
    163+          // Pointer to tree or node                                                                                1000142
    164+          pNode          Pointer    value;                                                                          1000143
    165+          // Path to node                                                                                           1000144
    166+          NodeName       Like(UTF8) const options(*varsize);                                                        1000145
    167+        End-PR;                                                                                                     1000146
    168+                                                                                                                    1000147
  5770WDS V7R3M0  160422 RN        IBM ILE RPG             NOXDB2/EX01DEMO          DKSRV133   07-12-18 02:29:12        Page      7
 Line   <---------------------- Source Specifications ----------------------------------------------------->  Do  Change Src Seq
 Number ....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+...10  Num Date   Id  Number
    169+        // Returns 'ON' if node exists and has <> 0                                                                 1000148
    170+        Dcl-PR json_isNull Ind extproc(*CWIDEN : 'nox_IsNullVC');                                                   1000149
    171+          // Pointer to tree or node                                                                                1000150
    172+          pNode          Pointer    value;                                                                          1000151
    173+          // Path to node                                                                                           1000152
    174+          NodeName       Like(UTF8) const options(*varsize);                                                        1000153
    175+        End-PR;                                                                                                     1000154
    176+                                                                                                                    1000155
    177+        // Returns 'ON' if it is a valid node                                                                       1000156
    178+        Dcl-PR json_isNode Ind extproc(*CWIDEN : 'nox_isNode');                                                     1000157
    179+          // a.k.a. false for strings                                                                               1000158
    180+          pNode          Pointer    value;                                                                          1000159
    181+        End-PR;                                                                                                     1000160
    182+                                                                                                                    1000161
    183+        // renames the node name                                                                                    1000162
    184+        Dcl-PR json_NodeRename Ind extproc(*CWIDEN : 'nox_NodeRenameVC');                                           1000163
    185+          // Pointer to tree or node                                                                                1000164
    186+          pNode          Pointer    value;                                                                          1000165
    187+          // Path to node                                                                                           1000166
    188+          NodeName       Like(UTF8) const options(*varsize);                                                        1000167
    189+        End-PR;                                                                                                     1000168
    190+                                                                                                                    1000169
    191+        // Returns pointer to next sibling (elem)                                                                   1000170
    192+        Dcl-PR json_GetNext Pointer extproc(*CWIDEN : 'nox_GetNodeNext');                                           1000171
    193+          // Pointer to current node (elem)                                                                         1000172
    194+          pNode          Pointer    value;                                                                          1000173
    195+        End-PR;                                                                                                     1000174
    196+                                                                                                                    1000175
    197+        // Returns pointer to first child (elem)                                                                    1000176
    198+        Dcl-PR json_GetChild Pointer extproc(*CWIDEN : 'nox_GetNodeChild');                                         1000177
    199+          // Pointer to current node (elem)                                                                         1000178
    200+          pNode          Pointer    value;                                                                          1000179
    201+        End-PR;                                                                                                     1000180
    202+                                                                                                                    1000181
    203+        // Returns pointer to parent node                                                                           1000182
    204+        Dcl-PR json_GetParent Pointer extproc(*CWIDEN : 'nox_GetNodeParent');                                       1000183
    205+          // Pointer to current node (elem)                                                                         1000184
    206+          pNode          Pointer    value;                                                                          1000185
    207+        End-PR;                                                                                                     1000186
    208+                                                                                                                    1000187
    209+        Dcl-PR json_SetEval pointer extproc(*CWIDEN:'nox_SetEvalByNameVC');                                         1000188
    210+          pNode          Pointer    value;                                                                          1000189
    211+          Expresion      Like(UTF8) const options(*varsize);                                                        1000190
    212+          Value          Like(UTF8) const options(*varsize);                                                        1000191
  5770WDS V7R3M0  160422 RN        IBM ILE RPG             NOXDB2/EX01DEMO          DKSRV133   07-12-18 02:29:12        Page      8
 Line   <---------------------- Source Specifications ----------------------------------------------------->  Do  Change Src Seq
 Number ....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+...10  Num Date   Id  Number
    213+        End-PR;                                                                                                     1000192
    214+                                                                                                                    1000193
    215+        Dcl-PR json_SetStr Pointer extproc(*CWIDEN: 'nox_SetStrByNameVC');                                          1000194
    216+          // Pointer to json_ tree                                                                                  1000195
    217+          pNode          Pointer    value;                                                                          1000196
    218+          // X-path locations to node or attributes                                                                 1000197
    219+          Expresion      Like(UTF8) const options(*varsize);                                                        1000198
    220+          // New value to set / pointer to object                                                                   1000199
    221+          Value          Like(UTF8) const options(*varsize);                                                        1000200
    222+        End-PR;                                                                                                     1000201
    223+                                                                                                                    1000202
    224+        Dcl-PR json_SetInt Pointer extproc(*CWIDEN: 'nox_SetIntByNameVC');                                          1000203
    225+          // Pointer to json_ tree                                                                                  1000204
    226+          pNode          Pointer    value;                                                                          1000205
    227+          // X-path locations to node or attributes                                                                 1000206
    228+          Expresion      Like(UTF8) const options(*varsize);                                                        1000207
    229+          // New value to set / pointer to object                                                                   1000208
    230+          Value          Int(10)    value;                                                                          1000209
    231+        End-PR;                                                                                                     1000210
    232+                                                                                                                    1000211
    233+        Dcl-PR json_SetDate Pointer extproc(*CWIDEN: 'nox_SetDateByNameVC');                                        1000212
    234+          // Pointer to json_ tree                                                                                  1000213
    235+          pNode          Pointer    value;                                                                          1000214
    236+          // X-path locations to node or attributes                                                                 1000215
    237+          Expresion      Like(UTF8) const options(*varsize);                                                        1000216
    238+          // New value to set / pointer to object                                                                   1000217
    239+          Value          date    value;                                                                             1000218
    240+        End-PR;                                                                                                     1000219
    241+                                                                                                                    1000220
    242+                                                                                                                    1000221
    243+        Dcl-PR json_SetNum Pointer extproc(*CWIDEN: 'nox_SetDecByNameVC');                                          1000222
    244+          // Pointer to json_ tree                                                                                  1000223
    245+          pNode          Pointer    value;                                                                          1000224
    246+          // X-path locations to node or attributes                                                                 1000225
    247+          Expresion      Like(UTF8) const options(*varsize);                                                        1000226
    248+          // New value to set / pointer to object                                                                   1000227
    249+          Value          Packed(30:15) value;                                                                       1000228
    250+        End-PR;                                                                                                     1000229
    251+                                                                                                                    1000230
    252+        Dcl-PR json_SetBool Pointer extproc(*CWIDEN: 'nox_SetBoolByNameVC');                                        1000231
    253+          // Pointer to json_ tree                                                                                  1000232
    254+          pNode          Pointer    value;                                                                          1000233
    255+          // X-path locations to node or attributes                                                                 1000234
    256+          Expresion      Like(UTF8) const options(*varsize);                                                        1000235
  5770WDS V7R3M0  160422 RN        IBM ILE RPG             NOXDB2/EX01DEMO          DKSRV133   07-12-18 02:29:12        Page      9
 Line   <---------------------- Source Specifications ----------------------------------------------------->  Do  Change Src Seq
 Number ....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+...10  Num Date   Id  Number
    257+          // New value to set / pointer to object                                                                   1000236
    258+          Value          Ind        value;                                                                          1000237
    259+        End-PR;                                                                                                     1000238
    260+                                                                                                                    1000239
    261+        Dcl-PR json_SetPtr Pointer extproc(*CWIDEN: 'nox_SetPtrByNameVC');                                          1000240
    262+          // Pointer to json_ tree                                                                                  1000241
    263+          pNode          Pointer    value;                                                                          1000242
    264+          // X-path locations to node or attributes                                                                 1000243
    265+          Expresion      Like(UTF8) const options(*varsize);                                                        1000244
    266+          // Pointer to anything - You do the cleanup                                                               1000245
    267+          Value          Pointer    value;                                                                          1000246
    268+          // *ON=String escape, *OFF=If literals                                                                    1000247
    269+          isString       Ind        value options(*nopass);                                                         1000248
    270+        End-PR;                                                                                                     1000249
    271+                                                                                                                    1000250
    272+        Dcl-PR json_SetProcPtr Pointer extproc(*CWIDEN: 'nox_SetPtrByNameVC');                                      1000251
    273+          pNode          Pointer    value; // Pointer to json_ tree                                                 1000252
    274+          // X-path locations to node or attributes                                                                 1000253
    275+          Expresion      Like(UTF8) const options(*varsize);                                                        1000254
    276+          Proc           Pointer(*Proc); // Pointer to a procedure                                                  1000255
    277+        End-PR;                                                                                                     1000256
    278+                                                                                                                    1000257
    279+        Dcl-PR json_GetValueStr Like(UTF8)                                                                          1000258
    280+                              extproc(*CWIDEN : 'nox_GetNodeValueVC');                                              1000259
    281+          // Pointer to node                                                                                        1000260
    282+          pNode          Pointer    value;                                                                          1000261
    283+          // If not found - default value                                                                           1000262
    284+          Defaultvalue   Like(UTF8) const options(*nopass:*varsize);                                                1000263
    285+        End-PR;                                                                                                     1000264
    286+                                                                                                                    1000265
    287+        Dcl-PR json_GetValueNum Packed(30:15)                                                                       1000266
    288+                              extproc(*CWIDEN : 'nox_GetNodeValueNum');                                             1000267
    289+          // Pointer to node                                                                                        1000268
    290+          pNode          Pointer    value;                                                                          1000269
    291+          // If not found - default value                                                                           1000270
    292+          Defaultvalue   Packed(30:15) value options(*NOPASS);                                                      1000271
    293+        End-PR;                                                                                                     1000272
    294+                                                                                                                    1000273
    295+        Dcl-PR json_GetValueInt Int(20) extproc(*CWIDEN : 'nox_GetNodeValueInt');                                   1000274
    296+          pNode          Pointer    value; // Pointer to node                                                       1000275
    297+          // If not found - default value                                                                           1000276
    298+          Defaultvalue   Int(20)    value options(*NOPASS);                                                         1000277
    299+        End-PR;                                                                                                     1000278
    300+                                                                                                                    1000279
  5770WDS V7R3M0  160422 RN        IBM ILE RPG             NOXDB2/EX01DEMO          DKSRV133   07-12-18 02:29:12        Page     10
 Line   <---------------------- Source Specifications ----------------------------------------------------->  Do  Change Src Seq
 Number ....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+...10  Num Date   Id  Number
    301+        Dcl-PR json_GetValuePtr Pointer extproc(*CWIDEN : 'nox_GetNodeValuePtr');                                   1000280
    302+          // Pointer to node                                                                                        1000281
    303+          pNode          Pointer    value;                                                                          1000282
    304+          // If not found - default value                                                                           1000283
    305+          Defaultvalue   Like(UTF8) const options(*nopass:*varsize);                                                1000284
    306+        End-PR;                                                                                                     1000285
    307+                                                                                                                    1000286
    308+        Dcl-PR json_GetName Like(UTF8)                                                                              1000287
    309+                          extproc(*CWIDEN : 'nox_GetNodeNameVC');                                                   1000288
    310+          // Pointer to node                                                                                        1000289
    311+          pNode          Pointer    value;                                                                          1000290
    312+        End-PR;                                                                                                     1000291
    313+                                                                                                                    1000292
    314+        Dcl-PR json_GetNameAsPath Like(UTF8)                                                                        1000293
    315+                                extproc(*CWIDEN : 'nox_GetNodeNameAsPath');                                         1000294
    316+          // Pointer to node                                                                                        1000295
    317+          pNode          Pointer    value;                                                                          1000296
    318+          // Delimiter like - or . or / or \                                                                        1000297
    319+          Delimiter      Char(1)    value CCSID(*UTF8);                                                             1000298
    320+        End-PR;                                                                                                     1000299
    321+                                                                                                                    1000300
    322+        // * Refer to node type above                                                                               1000301
    323+        Dcl-PR json_NodeType Int(5) extproc(*CWIDEN : 'nox_GetNodeType');                                           1000302
    324+          // Pointer to json_ tree to receive format                                                                1000303
    325+          pNode          Pointer    value;                                                                          1000304
    326+        End-PR;                                                                                                     1000305
    327+                                                                                                                    1000306
    328+      // Get string by expresion                                                                                    1000307
    329+      //  /object/array[123]/name                                                                                   1000308
    330+      //  .object.array[123].name                                                                                   1000309
    331+      // NL-OK                                                                                                      1000310
    332+        Dcl-PR json_GetStr Like(UTF8) rtnparm extproc(*CWIDEN : 'nox_GetValueVC');                                  1000311
    333+          // Pointer to relative node                                                                               1000312
    334+          pNode          Pointer    value;                                                                          1000313
    335+          // Locations expression to node                                                                           1000314
    336+          Expression     Like(UTF8) const options(*nopass:*varsize);                                                1000315
    337+          // If not found - default value                                                                           1000316
    338+          Defaultvalue   Like(UTF8) const options(*nopass:*varsize);                                                1000317
    339+        End-PR;                                                                                                     1000318
    340+                                                                                                                    1000319
    341+      //  will join all subsequent array nodes into one resulting string                                            1000320
    342+        Dcl-PR json_GetStrJoin Like(UTF8)                                                                           1000321
    343+                             extproc(*CWIDEN : 'nox_GetStrJoinVC');                                                 1000322
    344+          // Pointer to relative node                                                                               1000323
  5770WDS V7R3M0  160422 RN        IBM ILE RPG             NOXDB2/EX01DEMO          DKSRV133   07-12-18 02:29:12        Page     11
 Line   <---------------------- Source Specifications ----------------------------------------------------->  Do  Change Src Seq
 Number ....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+...10  Num Date   Id  Number
    345+          pNode          Pointer    value;                                                                          1000324
    346+          // Locations expression to node                                                                           1000325
    347+          Expression     Like(UTF8) const options(*nopass:*varsize);                                                1000326
    348+          // If not found - default value                                                                           1000327
    349+          Defaultvalue   Like(UTF8) const options(*nopass:*varsize);                                                1000328
    350+        End-PR;                                                                                                     1000329
    351+                                                                                                                    1000330
    352+      // Get number by expresion like:                                                                              1000331
    353+      //  /object/array[123]/name                                                                                   1000332
    354+      //  .object.array[123].name                                                                                   1000333
    355+      // NL-OK                                                                                                      1000334
    356+        Dcl-PR json_GetNum Packed(30:15) extproc(*CWIDEN : 'nox_GetValueNumVC');                                    1000335
    357+          // Pointer to relative node                                                                               1000336
    358+          pNode          Pointer    value;                                                                          1000337
    359+          // Locations expression to node                                                                           1000338
    360+          Expression     Like(UTF8) const  options(*nopass:*varsize);                                               1000339
    361+          // If not found - default value                                                                           1000340
    362+          Defaultvalue   Packed(30:15) value options(*nopass);                                                      1000341
    363+        End-PR;                                                                                                     1000342
    364+                                                                                                                    1000343
    365+        Dcl-PR json_GetInt Int(20) extproc(*CWIDEN : 'nox_GetValueIntVC');                                          1000344
    366+          // Pointer to relative node                                                                               1000345
    367+          pNode          Pointer    value;                                                                          1000346
    368+          // Locations expression to node                                                                           1000347
    369+          Expression     Like(UTF8) const options(*nopass:*varsize);                                                1000348
    370+          // If not found - default value                                                                           1000349
    371+          Defaultvalue   Int(20)    value options(*nopass);                                                         1000350
    372+        End-PR;                                                                                                     1000351
    373+                                                                                                                    1000352
    374+        Dcl-PR json_GetDate date  extproc(*CWIDEN : 'nox_GetValueDateVC');                                          1000353
    375+          // Pointer to relative node                                                                               1000354
    376+          pNode          Pointer    value;                                                                          1000355
    377+          // Locations expression to node                                                                           1000356
    378+          Expression     Like(UTF8) const options(*nopass:*varsize);                                                1000357
    379+          // If not found - default value                                                                           1000358
    380+          Defaultvalue   date   value options(*nopass);                                                             1000359
    381+        End-PR;                                                                                                     1000360
    382+                                                                                                                    1000361
    383+        Dcl-PR json_CopyValue Pointer extproc(*CWIDEN : 'nox_CopyValueVC');                                         1000362
    384+          // destination node                                                                                       1000363
    385+          pDest          Pointer    value;                                                                          1000364
    386+          // destiantion name (or *NULL or '')                                                                      1000365
    387+          destName       Like(UTF8) const options(*varsize);                                                        1000366
    388+          // source node                                                                                            1000367
  5770WDS V7R3M0  160422 RN        IBM ILE RPG             NOXDB2/EX01DEMO          DKSRV133   07-12-18 02:29:12        Page     12
 Line   <---------------------- Source Specifications ----------------------------------------------------->  Do  Change Src Seq
 Number ....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+...10  Num Date   Id  Number
    389+          pSource        Pointer    value;                                                                          1000368
    390+          // source name (or *NULL or '')                                                                           1000369
    391+          sourceName     Like(UTF8) const options(*varsize);                                                        1000370
    392+        End-PR;                                                                                                     1000371
    393+                                                                                                                    1000372
    394+        Dcl-PR json_NodeClone Pointer extproc(*CWIDEN : 'nox_NodeClone');                                           1000373
    395+          // node. Retrive from Locate()                                                                            1000374
    396+          pSource        Pointer    value;                                                                          1000375
    397+        End-PR;                                                                                                     1000376
    398+                                                                                                                    1000377
    399+        // Delete and set ref pointer to zero:                                                                      1000378
    400+        Dcl-PR json_Delete extproc(*CWIDEN : 'nox_Delete');                                                         1000379
    401+          // element. Retrive from Locate()                                                                         1000380
    402+          pRootNode      Pointer;                                                                                   1000381
    403+        End-PR;                                                                                                     1000382
    404+                                                                                                                    1000383
    405+                                                                                                                    1000384
    406+        // Unlink the note from its previous and promote it as a new root node                                      1000385
    407+        Dcl-PR json_NodeUnlink Pointer extproc(*CWIDEN : 'nox_NodeUnlink');                                         1000386
    408+          // Targenode. Retrive from Locate(                                                                        1000387
    409+          pNode          Pointer    value;                                                                          1000388
    410+        End-PR;                                                                                                     1000389
    411+                                                                                                                    1000390
    412+        Dcl-PR json_NodeSanitize extproc(*CWIDEN : 'nox_NodeSanitize');                                             1000391
    413+          // node. Retrive from Locate()                                                                            1000392
    414+          pRootNode      Pointer    value;                                                                          1000393
    415+        End-PR;                                                                                                     1000394
    416+                                                                                                                    1000395
    417+        // CheckSum of all names and values                                                                         1000396
    418+        // Delete all nodes which value are null                                                                    1000397
    419+        Dcl-PR json_NodeCheckSum Uns(10) extproc(*CWIDEN : 'nox_NodeCheckSum');                                     1000398
    420+          pRootNode      Pointer    value; // node. Retrive from Locate()                                           1000399
    421+        End-PR;                                                                                                     1000400
    422+                                                                                                                    1000401
    423+        // returns the new node                                                                                     1000402
    424+        Dcl-PR json_NewObject Pointer extproc(*CWIDEN : 'nox_NewObject');                                           1000403
    425+        End-PR;                                                                                                     1000404
    426+                                                                                                                    1000405
    427+      // Array functions                                                                                            1000406
    428+        // returns the new node                                                                                     1000407
    429+        Dcl-PR json_NewArray Pointer extproc(*CWIDEN : 'nox_NewArray');                                             1000408
    430+        End-PR;                                                                                                     1000409
    431+                                                                                                                    1000410
    432+        // returns the new node added to the end of                                                                 1000411
  5770WDS V7R3M0  160422 RN        IBM ILE RPG             NOXDB2/EX01DEMO          DKSRV133   07-12-18 02:29:12        Page     13
 Line   <---------------------- Source Specifications ----------------------------------------------------->  Do  Change Src Seq
 Number ....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+...10  Num Date   Id  Number
    433+        Dcl-PR json_ArrayPush Pointer extproc(*CWIDEN : 'nox_ArrayPush');                                           1000412
    434+          // Destination. Retrive from Locate()                                                                     1000413
    435+          pDestArray     Pointer    value;                                                                          1000414
    436+          // source node to append                                                                                  1000415
    437+          pSourceNode    Pointer   value;                                                                           1000416
    438+          // 0=(Dft) Unlink and move, 1=copy a clone                                                                1000417
    439+          copy           Uns(5)     value options(*nopass);                                                         1000418
    440+        End-PR;                                                                                                     1000419
    441+                                                                                                                    1000420
    442+        // Following constants used by json_ArrayPush:copy                                                          1000421
    443+        Dcl-C json_MOVE_UNLINK const(0);                                                                            1000422
    444+        Dcl-C json_COPY_CLONE const(1);                                                                             1000423
    445+                                                                                                                    1000424
    446+        // returns the new node added to the end of                                                                 1000425
    447+        Dcl-PR json_ArrayAppend Pointer extproc(*CWIDEN :'nox_ArrayAppend');                                        1000426
    448+          // Destination. Retrive from Locate()                                                                     1000427
    449+          pDestArray     Pointer    value;                                                                          1000428
    450+          // source node to append                                                                                  1000429
    451+          pSourceNode    Pointer    value;                                                                          1000430
    452+          // 0=(Dft) Unlink and move, 1=copy a clone                                                                1000431
    453+          copy           Uns(5)     value options(*nopass);                                                         1000432
    454+        End-PR;                                                                                                     1000433
    455+                                                                                                                    1000434
    456+        // returns the new array fro source array                                                                   1000435
    457+        Dcl-PR json_ArraySlice Pointer extproc(*CWIDEN : 'nox_ArraySlice' );                                        1000436
    458+          // source node                                                                                            1000437
    459+          pSourceNode    Pointer    value;                                                                          1000438
    460+          // From entry ( 1=First)                                                                                  1000439
    461+          from           Int(10)    value;                                                                          1000440
    462+          // To and includ   (-1 = Until end)                                                                       1000441
    463+          to             Int(10)    value;                                                                          1000442
    464+          // 0=(Dft) Unlink and move, 1=copy a clone                                                                1000443
    465+          copy           Uns(5)     value options(*nopass);                                                         1000444
    466+        End-PR;                                                                                                     1000445
    467+                                                                                                                    1000446
    468+        // returns the new node added to the end of                                                                 1000447
    469+        Dcl-PR json_ArraySort Pointer extproc(*CWIDEN : 'nox_ArraySortVC');                                         1000448
    470+          // Destination. Retrive from Locate()                                                                     1000449
    471+          pArray         Pointer    value;                                                                          1000450
    472+          // nodenames if any in subobject to comapre                                                               1000451
    473+          pkeyNames      Like(UTF8) const ;                                                                         1000452
    474+          // 0=(Dft) use json numerics, 1=Use locale                                                                1000453
    475+          options        uns(5)     value options(*nopass);                                                         1000454
    476+        End-PR;                                                                                                     1000455
  5770WDS V7R3M0  160422 RN        IBM ILE RPG             NOXDB2/EX01DEMO          DKSRV133   07-12-18 02:29:12        Page     14
 Line   <---------------------- Source Specifications ----------------------------------------------------->  Do  Change Src Seq
 Number ....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+...10  Num Date   Id  Number
    477+                                                                                                                    1000456
    478+        Dcl-C json_USE_LOCALE const(1);                                                                             1000457
    479+                                                                                                                    1000458
    480+        // returns the first node with expr value                                                                   1000459
    481+        Dcl-PR json_LookupValue Pointer extproc(*CWIDEN : 'nox_lookupValueVC');                                     1000460
    482+          // Array/ obj to search                                                                                   1000461
    483+          pArray         Pointer    value;                                                                          1000462
    484+          // What to search for                                                                                     1000463
    485+          expr           Like(UTF8) const options(*varsize);                                                        1000464
    486+          // 0=(Dft) Same case, 1=ignore case                                                                       1000465
    487+          ignoreCase     Uns(5)     value options(*nopass);                                                         1000466
    488+        End-PR;                                                                                                     1000467
    489+                                                                                                                    1000468
    490+        // Following constants used by json_LookupValue:ignoreCase                                                  1000469
    491+        Dcl-C json_SAME_CASE const(0);                                                                              1000470
    492+        Dcl-C json_IGNORE_CASE const(1);                                                                            1000471
    493+                                                                                                                    1000472
    494+        // returns numer of element in array or obj                                                                 1000473
    495+        Dcl-PR json_GetLength Int(10) extproc(*CWIDEN : 'nox_getLength'  );                                         1000474
    496+          // Array to count length                                                                                  1000475
    497+          pArray         Pointer    value;                                                                          1000476
    498+        End-PR;                                                                                                     1000477
    499+                                                                                                                    1000478
    500+        // Following constants used by json_Merge:Type                                                              1000479
    501+        Dcl-C json_DONTREPLACE const(0);                                                                            1000480
    502+        Dcl-C json_REPLACE const(1);                                                                                1000481
    503+                                                                                                                    1000482
    504+        // returns the new node                                                                                     1000483
    505+        Dcl-PR json_MergeObjects Pointer extproc(*CWIDEN : 'nox_MergeObjects');                                     1000484
    506+          // Destination. Retrive from Locate()                                                                     1000485
    507+          pDestObj       Pointer    value;                                                                          1000486
    508+          // Source tree  Retrive from Locate()                                                                     1000487
    509+          pSourceObj     Pointer    value;                                                                          1000488
    510+          // json_DONTREPLACE or json_OBJREPLACE                                                                    1000489
    511+          Type           Uns(5)     value;                                                                          1000490
    512+        End-PR;                                                                                                     1000491
    513+                                                                                                                    1000492
    514+        // returns the source node                                                                                  1000493
    515+        Dcl-PR json_MoveObjectInto Pointer extproc(*CWIDEN : 'nox_NodeMoveIntoVC');                                 1000494
    516+          // Destination. Retrive from Locate()                                                                     1000495
    517+          pDestObj       Pointer    value;                                                                          1000496
    518+          Name           Like(UTF8) const options(*varsize);                                                        1000497
    519+          // Source tree  Retrive from Locate()                                                                     1000498
    520+          pSourceObj     Pointer    value;                                                                          1000499
  5770WDS V7R3M0  160422 RN        IBM ILE RPG             NOXDB2/EX01DEMO          DKSRV133   07-12-18 02:29:12        Page     15
 Line   <---------------------- Source Specifications ----------------------------------------------------->  Do  Change Src Seq
 Number ....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+...10  Num Date   Id  Number
    521+        End-PR;                                                                                                     1000500
    522+                                                                                                                    1000501
    523+        Dcl-PR json_Dump  extproc(*CWIDEN : 'nox_Dump');                                                            1000502
    524+          // Pointer to tree                                                                                        1000503
    525+          pNode          Pointer    value;                                                                          1000504
    526+        End-PR;                                                                                                     1000505
    527+                                                                                                                    1000506
    528+                                                                                                                    1000507
    529+        // **  JSON renderes ***                                                                                    1000508
    530+        Dcl-PR json_WriteJsonStmf  extproc(*CWIDEN : 'nox_WriteJsonStmf');                                          1000509
    531+          // node. Retrive from Locate()                                                                            1000510
    532+          pNode          Pointer    value;                                                                          1000511
    533+          // Name of output stream file                                                                             1000512
    534+          FileName       Pointer    value  options(*string);                                                        1000513
    535+          // Ccsid of output file                                                                                   1000514
    536+          Ccsid          Int(10)    value;                                                                          1000515
    537+          Trim           Ind        value;                                                                          1000516
    538+          // Extra options                                                                                          1000517
    539+          Options        Pointer    value  options(*nopass:*string);                                                1000518
    540+        End-PR;                                                                                                     1000519
    541+                                                                                                                    1000520
    542+        Dcl-PR json_AsJsonText Like(UTF8) rtnparm extproc(*CWIDEN : 'nox_AsJsonText');                              1000521
    543+          // node. Retrive from Locate()                                                                            1000522
    544+          pNode          Pointer    value;                                                                          1000523
    545+        End-PR;                                                                                                     1000524
    546+                                                                                                                    1000525
    547+        Dcl-PR json_AsJsonTextMem Uns(10) extproc(*CWIDEN : 'nox_AsJsonTextMem');                                   1000526
    548+          // node. Retrive from Locate()                                                                            1000527
    549+          pNode          Pointer    value;                                                                          1000528
    550+          // pointer to any memory buffer                                                                           1000529
    551+          pBuffer        Pointer    value;                                                                          1000530
    552+          // Max number of bytes in buffer %size()                                                                  1000531
    553+          maxSize        Uns(10)    value options(*nopass);                                                         1000532
    554+        End-PR;                                                                                                     1000533
    555+                                                                                                                    1000534
    556+        // **  XML  renderes ***                                                                                    1000535
    557+        Dcl-PR json_WriteXmlStmf  extproc(*CWIDEN : 'nox_WriteXmlStmf');                                            1000536
    558+          // node. Retrive from Locate()                                                                            1000537
    559+          pNode          Pointer    value;                                                                          1000538
    560+          // Name of output stream file                                                                             1000539
    561+          FileName       Pointer    value  options(*string);                                                        1000540
    562+          // Ccsid of output file                                                                                   1000541
    563+          Ccsid          Int(10)    value;                                                                          1000542
    564+          Trim           Ind        value;                                                                          1000543
  5770WDS V7R3M0  160422 RN        IBM ILE RPG             NOXDB2/EX01DEMO          DKSRV133   07-12-18 02:29:12        Page     16
 Line   <---------------------- Source Specifications ----------------------------------------------------->  Do  Change Src Seq
 Number ....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+...10  Num Date   Id  Number
    565+          // Extra options                                                                                          1000544
    566+          Options        Pointer    value  options(*nopass:*string);                                                1000545
    567+        End-PR;                                                                                                     1000546
    568+                                                                                                                    1000547
    569+        Dcl-PR json_AsXmlText Like(UTF8) rtnparm extproc(*CWIDEN : 'nox_AsXmlText');                                1000548
    570+          // node. Retrive from Locate()                                                                            1000549
    571+          pNode          Pointer    value;                                                                          1000550
    572+        End-PR;                                                                                                     1000551
    573+                                                                                                                    1000552
    574+        Dcl-PR json_AsXmlTextMem Uns(10) extproc(*CWIDEN : 'nox_AsXmlTextMem');                                     1000553
    575+          // node. Retrive from Locate()                                                                            1000554
    576+          pNode          Pointer    value;                                                                          1000555
    577+          // pointer to any memory buffer                                                                           1000556
    578+          pBuffer        Pointer    value;                                                                          1000557
    579+        End-PR;                                                                                                     1000558
    580+                                                                                                                    1000559
    581+        // Return a streamer object to be used in own serialisers                                                   1000560
    582+        Dcl-PR json_Stream pointer extproc(*CWIDEN : 'nox_Stream');                                                 1000561
    583+          // node. Retrive from Locate()                                                                            1000562
    584+          pNode          Pointer    value;                                                                          1000563
    585+        End-PR;                                                                                                     1000564
    586+                                                                                                                    1000565
    587+        // **  CSV  renderes ***                                                                                    1000566
    588+        Dcl-PR json_WriteCsvStmf  extproc(*CWIDEN : 'nox_WriteCsvStmf');                                            1000567
    589+          // node. Retrive from Locate()                                                                            1000568
    590+          pNode          Pointer    value;                                                                          1000569
    591+          // Name of output stream file                                                                             1000570
    592+          FileName       Pointer    value  options(*string);                                                        1000571
    593+          // Ccsid of output file                                                                                   1000572
    594+          Ccsid          Int(10)    value;                                                                          1000573
    595+          // *ON=Remove inter blanks                                                                                1000574
    596+          Trim           Ind        value;                                                                          1000575
    597+          // Options: ';.' for separator and dec                                                                    1000576
    598+          Options        Pointer    value  options(*nopass:*string);                                                1000577
    599+        End-PR;                                                                                                     1000578
    600+                                                                                                                    1000579
    601+        // Iterators: First use the set the use forEach                                                             1000580
    602+        Dcl-DS json_Iterator  based(prototype_only) qualified;                                                      1000581
    603+          root           Pointer;                                                                                   1000582
    604+          this           Pointer;                                                                                   1000583
    605+          isList         Ind;                                                                                       1000584
    606+          isFirst        Ind;                                                                                       1000585
    607+          isLast         Ind;                                                                                       1000586
    608+          isRecursive    Ind;                                                                                       1000587
  5770WDS V7R3M0  160422 RN        IBM ILE RPG             NOXDB2/EX01DEMO          DKSRV133   07-12-18 02:29:12        Page     17
 Line   <---------------------- Source Specifications ----------------------------------------------------->  Do  Change Src Seq
 Number ....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+...10  Num Date   Id  Number
    609+          comma          Varchar(1);                                                                                1000588
    610+          count          Int(10);                                                                                   1000589
    611+          length         Int(10);                                                                                   1000590
    612+          size           Int(10);                                                                                   1000591
    613+          // Pointer to temp array of elms                                                                          1000592
    614+          listArr        Pointer;                                                                                   1000593
    615+          // Set  this to *ON to teminate loop                                                                      1000594
    616+          break          Ind;                                                                                       1000595
    617+          filler         Char(64);                                                                                  1000596
    618+        End-DS;                                                                                                     1000597
    619+                                                                                                                    1000598
    620+        Dcl-PR json_setIterator  likeds( json_Iterator) extproc(*CWIDEN : 'nox_SetIteratorVC');                     1000599
    621+          // node. Retrive from Locate()                                                                            1000600
    622+          pNode          Pointer    value;                                                                          1000601
    623+          // Optional - path to node                                                                                1000602
    624+          path           Like(UTF8) const options(*nopass:*varsize);                                                1000603
    625+        End-PR;                                                                                                     1000604
    626+                                                                                                                    1000605
    627+        Dcl-PR json_setRecursiveIterator  likeds( json_Iterator)                                                    1000606
    628+                                        extproc(*CWIDEN :                                                           1000607
    629+                                        'nox_SetRecursiveIteratorVC');                                              1000608
    630+          // node. Retrive from Locate()                                                                            1000609
    631+          pNode          Pointer    value;                                                                          1000610
    632+          // Optional - path to node                                                                                1000611
    633+          path           Like(UTF8) const options(*nopass:*varsize);                                                1000612
    634+        End-PR;                                                                                                     1000613
    635+                                                                                                                    1000614
    636+        // Iterator Structure                                                                                       1000615
    637+        Dcl-PR json_forEach Ind extproc(*CWIDEN : 'nox_ForEach');                                                   1000616
    638+          iterator                  likeds( json_Iterator);                                                         1000617
    639+        End-PR;                                                                                                     1000618
    640+                                                                                                                    1000619
    641+        // For attributes ( Used mostly in XML )                                                                    1000620
    642+        Dcl-PR json_GetNodeAttrValue Like(UTF8) rtnparm extproc(*CWIDEN : 'nox_GetNodeAttrValueVC');                1000621
    643+          // Pointer to exsiting element                                                                            1000622
    644+          pNode          Pointer    value;                                                                          1000623
    645+          // Attribute Name                                                                                         1000624
    646+          AttrName       Like(UTF8) const options(*varsize);                                                        1000625
    647+          // If not found - default value                                                                           1000626
    648+          Defaultvalue   Like(UTF8) const options(*nopass:*varsize);                                                1000627
    649+        End-PR;                                                                                                     1000628
    650+                                                                                                                    1000629
    651+        Dcl-PR json_SetNodeAttrValue extproc(*CWIDEN : 'nox_SetNodeAttrValueVC');                                   1000630
    652+          // Pointer to exsiting element                                                                            1000631
  5770WDS V7R3M0  160422 RN        IBM ILE RPG             NOXDB2/EX01DEMO          DKSRV133   07-12-18 02:29:12        Page     18
 Line   <---------------------- Source Specifications ----------------------------------------------------->  Do  Change Src Seq
 Number ....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+...10  Num Date   Id  Number
    653+          pNode          Pointer    value;                                                                          1000632
    654+          // Attribute name                                                                                         1000633
    655+          AttrName       Like(UTF8) const options(*varsize);                                                        1000634
    656+          // New value                                                                                              1000635
    657+          Value          Like(UTF8) const options(*varsize);                                                        1000636
    658+        End-PR;                                                                                                     1000637
    659+                                                                                                                    1000638
    660+        Dcl-PR json_GetAttrValue Like(UTF8) rtnparm                                                                 1000639
    661+                               extproc(*CWIDEN : 'nox_GetAttrValueVC');                                             1000640
    662+          // Pointer Attribute                                                                                      1000641
    663+          pAttr          Pointer    value;                                                                          1000642
    664+          // If not found - default value                                                                           1000643
    665+          Defaultvalue   Like(UTF8) const options(*nopass:*varsize);                                                1000644
    666+        End-PR;                                                                                                     1000645
    667+                                                                                                                    1000646
    668+        Dcl-PR json_SetAttrValue extproc(*CWIDEN : 'nox_SetAttrValue');                                             1000647
    669+          // Pointer Attribute                                                                                      1000648
    670+          pAttr          Pointer    value;                                                                          1000649
    671+          // New value                                                                                              1000650
    672+          AttrName       Like(UTF8) const options(*varsize);                                                        1000651
    673+          // Default value                                                                                          1000652
    674+          Value          Like(UTF8) const options(*varsize);                                                        1000653
    675+        End-PR;                                                                                                     1000654
    676+                                                                                                                    1000655
    677+        // Returns pointer to attribute list                                                                        1000656
    678+        Dcl-PR json_GetAttrFirst Pointer extproc(*CWIDEN : 'nox_GetAttrFirst');                                     1000657
    679+          // Pointer to element                                                                                     1000658
    680+          pElem          Pointer    value;                                                                          1000659
    681+        End-PR;                                                                                                     1000660
    682+                                                                                                                    1000661
    683+        // Returns pointer to attribute list                                                                        1000662
    684+        Dcl-PR json_GetAttrNext Pointer extproc(*CWIDEN : 'nox_GetAttrNext');                                       1000663
    685+          // Pointer to attribute list                                                                              1000664
    686+          pAttr          Pointer    value;                                                                          1000665
    687+        End-PR;                                                                                                     1000666
    688+                                                                                                                    1000667
    689+        Dcl-PR json_GetAttrName Like(UTF8) rtnparm                                                                  1000668
    690+                              extproc(*CWIDEN : 'nox_GetAttrNameVC');                                               1000669
    691+          // Pointer to attribute list                                                                              1000670
    692+          pAttr          Pointer    value;                                                                          1000671
    693+        End-PR;                                                                                                     1000672
    694+                                                                                                                    1000673
    695+      // Clear the contents of an array or object / delete all children                                             1000674
    696+        Dcl-PR json_Clear  extproc(*CWIDEN : 'nox_Clear');                                                          1000675
  5770WDS V7R3M0  160422 RN        IBM ILE RPG             NOXDB2/EX01DEMO          DKSRV133   07-12-18 02:29:12        Page     19
 Line   <---------------------- Source Specifications ----------------------------------------------------->  Do  Change Src Seq
 Number ....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+...10  Num Date   Id  Number
    697+          pNode          Pointer    value; // Pointer to tree node                                                  1000676
    698+        End-PR;                                                                                                     1000677
    699+                                                                                                                    1000678
    700+      // Close all nodes in this tree - also parent and siblings                                                    1000679
    701+        Dcl-PR json_Close  extproc(*CWIDEN : 'nox_Close');                                                          1000680
    702+          // Pointer to tree node                                                                                   1000681
    703+          pNode          Pointer  ;                                                                                 1000682
    704+        End-PR;                                                                                                     1000683
    705+      // Detect if you have a memry leak: call this when you have closed everything at i will return                1000684
  ...    false
    706+        Dcl-PR json_MemLeak Ind extproc(*CWIDEN : 'nox_MemLeak');                                                   1000685
    707+        End-PR;                                                                                                     1000686
    708+                                                                                                                    1000687
    709+      // Print memory report                                                                                        1000688
    710+        Dcl-PR json_MemStat  extproc(*CWIDEN : 'nox_MemStat');                                                      1000689
    711+        End-PR;                                                                                                     1000690
    712+                                                                                                                    1000691
    713+      // retune number of bytest used                                                                               1000692
    714+        Dcl-PR json_MemUse Uns(20) extproc(*CWIDEN : 'nox_MemUse');                                                 1000693
    715+        End-PR;                                                                                                     1000694
    716+                                                                                                                    1000695
    717+      // Maintain at list of index numbers to database CLOB/BLOB fields since pointers can not be sh                1000696
  ...   ared in SQL
    718+        // Returns *ON if found                                                                                     1000697
    719+        Dcl-PR json_mapIx Ind extproc(*CWIDEN:'nox_MapIx' );                                                        1000698
    720+          // pointer to node pointer                                                                                1000699
    721+          ppNode         Pointer;                                                                                   1000700
    722+          // index of pointer                                                                                       1000701
    723+          Index          Uns(10)    value;                                                                          1000702
    724+        End-PR;                                                                                                     1000703
    725+                                                                                                                    1000704
    726+                                                                                                                    1000705
    727+      // Returns a JSON object from a REST call                                                                     1000706
    728+        Dcl-PR json_httpRequest Pointer extproc(*CWIDEN:'nox_httpRequest');                                         1000707
    729+          // Full URL to the resource                                                                               1000708
    730+          url            Like(UTF8) const options(*varsize);                                                        1000709
    731+          // json object or string                                                                                  1000710
    732+          pReqNode       pointer value;                                                                             1000711
    733+          // extra CURL options                                                                                     1000712
    734+          options        Like(UTF8) const options(*nopass:*varsize);                                                1000713
    735+        End-PR;                                                                                                     1000714
    736+                                                                                                                    1000715
    737+                                                                                                                    1000716
    738+      // ------------------------------------------------------------------------                                   1000717
  5770WDS V7R3M0  160422 RN        IBM ILE RPG             NOXDB2/EX01DEMO          DKSRV133   07-12-18 02:29:12        Page     20
 Line   <---------------------- Source Specifications ----------------------------------------------------->  Do  Change Src Seq
 Number ....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+...10  Num Date   Id  Number
    739+      // SQL interface:                                                                                             1000718
    740+      // Note: When SQL functions returns *NULL, then use  the json_Message()                                       1000719
    741+      // to retrive the messages text. also the getSqlCode() can be usefull                                         1000720
    742+      // ------------------------------------------------------------------------                                   1000721
    743+                                                                                                                    1000722
    744+      // If options need - then it has to be first call made.                                                       1000723
    745+      // NOTE: If a pConnection pointer is provided, it will be updated with the conection                          1000724
    746+        Dcl-PR json_sqlSetOptions  extproc(*CWIDEN: 'nox_sqlSetOptions');                                           1000725
    747+          // Pointer to database connection provided by json_sqlConnect()                                           1000726
    748+          pConnection    pointer value;                                                                             1000727
    749+          // json object with options ( see sample)                                                                 1000728
    750+          parms          Like(UTF8) const options(*nopass:*varsize);                                                1000729
    751+        End-PR;                                                                                                     1000730
    752+                                                                                                                    1000731
    753+      // returns a object node with one resulting row for the SQL statment                                          1000732
    754+        // Returns one SQL row as jx Obejct                                                                         1000733
    755+        Dcl-PR json_sqlResultRow Pointer extproc(*CWIDEN: 'nox_sqlResultRowVC');                                    1000734
    756+          // Pointer to database connection provided by json_sqlConnect()                                           1000735
    757+          pConnection    pointer value;                                                                             1000736
    758+          // SQL statement to run                                                                                   1000737
    759+          sqlStmt        Like(UTF8) const options(*varsize);                                                        1000738
    760+          // json object template                                                                                   1000739
    761+          parms          Like(UTF8) const options(*nopass:*varsize);                                                1000740
    762+          // Starttin row                                                                                           1000741
    763+          start          int(10)    value options(*nopass);                                                         1000742
    764+        End-PR;                                                                                                     1000743
    765+                                                                                                                    1000744
    766+      // returns an array (or object with array) of resulting rows for the SQL statment                             1000745
    767+        // Returns SQL rows as jx Obejct                                                                            1000746
    768+        Dcl-PR json_sqlResultSet Pointer extproc(*CWIDEN: 'nox_sqlResultSetVC');                                    1000747
    769+          // Pointer to database connection provided by json_sqlConnect()                                           1000748
    770+          pConnection    pointer value;                                                                             1000749
    771+          // SQL statement to run                                                                                   1000750
    772+          sqlStmt        Like(UTF8) const options(*varsize);                                                        1000751
    773+          // From row; 1=First                                                                                      1000752
    774+          start          Int(10)    value options(*nopass);                                                         1000753
    775+          // max number of rows; json_ALLROWS=all                                                                   1000754
    776+          limit          Int(10)    value options(*nopass);                                                         1000755
    777+          // resultset format:                                                                                      1000756
    778+          format         Int(10)    value options(*nopass);                                                         1000757
    779+          // json object template                                                                                   1000758
    780+          parms          Like(UTF8) const options(*nopass:*varsize);                                                1000759
    781+        End-PR;                                                                                                     1000760
    782+                                                                                                                    1000761
  5770WDS V7R3M0  160422 RN        IBM ILE RPG             NOXDB2/EX01DEMO          DKSRV133   07-12-18 02:29:12        Page     21
 Line   <---------------------- Source Specifications ----------------------------------------------------->  Do  Change Src Seq
 Number ....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+...10  Num Date   Id  Number
    783+                                                                                                                    1000762
    784+        Dcl-C json_ALLROWS const(-1);                                                                               1000763
    785+                                                                                                                    1000764
    786+        // Following constants used by json_sqlResultSet:format                                                     1000765
    787+        // + An array with each row as an object                                                                    1000766
    788+        Dcl-C json_ROWARRAY const(0);                                                                               1000767
    789+        // + Metaobject: rows, fields                                                                               1000768
    790+        Dcl-C json_META    const(1);                                                                                1000769
    791+        // + Columns info                                                                                           1000770
    792+        Dcl-C json_FIELDS  const(2);                                                                                1000771
    793+        // + Count all rows in the resultset                                                                        1000772
    794+        // ( Pricy so awoid it !! )                                                                                 1000773
    795+        Dcl-C json_TOTALROWS const(4);                                                                              1000774
    796+        // + Uppercase column names                                                                                 1000775
    797+        Dcl-C json_UPPERCASE const(8);                                                                              1000776
    798+                                                                                                                    1000777
    799+        // + Appoximate number of rows..                                                                            1000778
    800+        //  ( unpresise but cheap !! prefered  )                                                                    1000779
    801+        Dcl-C json_APPROXIMATE_TOTALROWS const(16);                                                                 1000780
    802+                                                                                                                    1000781
    803+                                                                                                                    1000782
    804+                                                                                                                    1000783
    805+      // SQL cursor processing                                                                                      1000784
    806+        // Returns handle to sql statement                                                                          1000785
    807+        Dcl-PR json_sqlOpen Pointer extproc(*CWIDEN:'nox_sqlOpenVC'  );                                             1000786
    808+          // Pointer to database connection provided by json_sqlConnect()                                           1000787
    809+          pConnection    pointer value;                                                                             1000788
    810+          // SQL statement to run                                                                                   1000789
    811+          sqlStmt        Like(UTF8) const options(*varsize);                                                        1000790
    812+          // json object template                                                                                   1000791
    813+          parms          pointer value options(*nopass:*string);                                                    1000792
    814+        End-PR;                                                                                                     1000793
    815+                                                                                                                    1000794
    816+      // Fetch next from from that open sql handle, starting from rowNumer. 1=First row                             1000795
    817+        // Returns a row object (or *NULL if EOF)                                                                   1000796
    818+        Dcl-PR json_sqlFetchRelative Pointer                                                                        1000797
    819+                                   extproc(*CWIDEN: 'nox_sqlFetchRelative');                                        1000798
    820+          // sql statement handle ( from sqlOpen)                                                                   1000799
    821+          pSqlHndl       Pointer    value;                                                                          1000800
    822+          // row from where to start 1=First                                                                        1000801
    823+          fromRow        Int(10)    value;                                                                          1000802
    824+        End-PR;                                                                                                     1000803
    825+                                                                                                                    1000804
    826+      // Fetch next from from that open sql handle                                                                  1000805
  5770WDS V7R3M0  160422 RN        IBM ILE RPG             NOXDB2/EX01DEMO          DKSRV133   07-12-18 02:29:12        Page     22
 Line   <---------------------- Source Specifications ----------------------------------------------------->  Do  Change Src Seq
 Number ....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+...10  Num Date   Id  Number
    827+        // Returns a row object (or *NULL if EOF)                                                                   1000806
    828+        Dcl-PR json_sqlFetchNext Pointer extproc(*CWIDEN:'nox_sqlFetchNext');                                       1000807
    829+          // sql statement handle ( from sqlOpen)                                                                   1000808
    830+          pSqlHndl       Pointer    value;                                                                          1000809
    831+        End-PR;                                                                                                     1000810
    832+                                                                                                                    1000811
    833+      // Number of columns in result set ( -1 if error)                                                             1000812
    834+        // Returns number of columns                                                                                1000813
    835+        Dcl-PR json_sqlColumns Int(10) extproc(*CWIDEN:'nox_sqlColumns');                                           1000814
    836+          // sql statement handle ( from sqlOpen)                                                                   1000815
    837+          pSqlHndl       Pointer    value;                                                                          1000816
    838+        End-PR;                                                                                                     1000817
    839+                                                                                                                    1000818
    840+      // Number of rows  in result set ( -1 if error)                                                               1000819
    841+      // Note: This will run a hidden "select count(*)" which might be a little pricy                               1000820
    842+        // Returns number of rows                                                                                   1000821
    843+        Dcl-PR json_sqlRows Int(10) extproc(*CWIDEN:'nox_sqlRows');                                                 1000822
    844+          // sql statement handle ( from sqlOpen)                                                                   1000823
    845+          pSqlHndl       Pointer    value;                                                                          1000824
    846+        End-PR;                                                                                                     1000825
    847+                                                                                                                    1000826
    848+      // Always colse the cursor after use, to release resources                                                    1000827
    849+        Dcl-PR json_sqlClose  extproc(*CWIDEN:'nox_sqlClose');                                                      1000828
    850+          // sql statement handle ( from sqlOpen)                                                                   1000829
    851+          pSqlHndl       Pointer;                                                                                   1000830
    852+        End-PR;                                                                                                     1000831
    853+                                                                                                                    1000832
    854+      // Execute any SQL statement not involving a cursor                                                           1000833
    855+        // Returns *ON if error                                                                                     1000834
    856+        Dcl-PR json_sqlExec Ind extproc(*CWIDEN:'nox_sqlExecVC'  );                                                 1000835
    857+          // Pointer to database connection provided by json_sqlConnect()                                           1000836
    858+          pConnection   pointer value;                                                                              1000837
    859+          // SQL statement to run (template)                                                                        1000838
    860+          sqlStmt        Like(UTF8) const options(*varsize);                                                        1000839
    861+          // json object template data                                                                              1000840
    862+          parms          Like(UTF8) const options(*nopass:*varsize);                                                1000841
    863+        End-PR;                                                                                                     1000842
    864+                                                                                                                    1000843
    865+      // Execute an update table where the row is defined as a json object                                          1000844
    866+        // Returns *ON if error                                                                                     1000845
    867+        Dcl-PR json_sqlUpdate Ind extproc(*CWIDEN:'nox_sqlUpdateVC');                                               1000846
    868+          // Pointer to database connection provided by json_sqlConnect()                                           1000847
    869+          pConnection    pointer value;                                                                             1000848
    870+          // table name                                                                                             1000849
  5770WDS V7R3M0  160422 RN        IBM ILE RPG             NOXDB2/EX01DEMO          DKSRV133   07-12-18 02:29:12        Page     23
 Line   <---------------------- Source Specifications ----------------------------------------------------->  Do  Change Src Seq
 Number ....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+...10  Num Date   Id  Number
    871+          table          Like(UTF8) const options(*varsize);                                                        1000850
    872+          // json object: {a:123,b:"value"}                                                                         1000851
    873+          row            pointer value;                                                                             1000852
    874+          // where clause : 'where myKey=$key'                                                                      1000853
    875+          where          Like(UTF8) const options(*nopass:*varsize);                                                1000854
    876+          // where parameters: { key:777}                                                                           1000855
    877+          whereParms     pointer value options(*nopass);                                                            1000856
    878+        End-PR;                                                                                                     1000857
    879+                                                                                                                    1000858
    880+        // Returns *ON if error                                                                                     1000859
    881+        Dcl-PR json_sqlInsert Ind extproc(*CWIDEN:'nox_sqlInsertVC');                                               1000860
    882+          // Pointer to database connection provided by json_sqlConnect()                                           1000861
    883+          pConnection    pointer value;                                                                             1000862
    884+          // table name                                                                                             1000863
    885+          table          Like(UTF8) const options(*varsize);                                                        1000864
    886+          // json object: {a:123,b:"value"}                                                                         1000865
    887+          row            pointer value;                                                                             1000866
    888+          // extra parms                                                                                            1000867
    889+          parms          Like(UTF8) const options(*nopass:*varsize);                                                1000868
    890+        End-PR;                                                                                                     1000869
    891+                                                                                                                    1000870
    892+        // Returns *ON if error                                                                                     1000871
    893+        Dcl-PR json_sqlUpsert Ind extproc(*CWIDEN:'nox_sqlUpsertVC');                                               1000872
    894+          // Pointer to database connection provided by json_sqlConnect()                                           1000873
    895+          pConnection    pointer value;                                                                             1000874
    896+          // table name                                                                                             1000875
    897+          table          Like(UTF8) const options(*varsize);                                                        1000876
    898+          // json object: {a:123,b:"value"}                                                                         1000877
    899+          row            pointer value;                                                                             1000878
    900+          // where clause : 'where myKey=$key'                                                                      1000879
    901+          where          Like(UTF8) const options(*varsize);                                                        1000880
    902+          // where parameters: { key:777}                                                                           1000881
    903+          whereParms     pointer value options(*nopass);                                                            1000882
    904+        End-PR;                                                                                                     1000883
    905+                                                                                                                    1000884
    906+        // Returns id of last insert                                                                                1000885
    907+        Dcl-PR json_sqlGetInsertId Int(10) extproc(*CWIDEN:'nox_sqlGetInsertId');                                   1000886
    908+          // Pointer to database connection provided by json_sqlConnect()                                           1000887
    909+          pConnection    pointer value;                                                                             1000888
    910+        End-PR;                                                                                                     1000889
    911+                                                                                                                    1000890
    912+        // Returns array of column info                                                                             1000891
    913+        Dcl-PR json_sqlGetMeta Pointer extproc(*CWIDEN:'nox_sqlGetMetaVC');                                         1000892
    914+          // Pointer to database connection provided by json_sqlConnect()                                           1000893
  5770WDS V7R3M0  160422 RN        IBM ILE RPG             NOXDB2/EX01DEMO          DKSRV133   07-12-18 02:29:12        Page     24
 Line   <---------------------- Source Specifications ----------------------------------------------------->  Do  Change Src Seq
 Number ....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+...10  Num Date   Id  Number
    915+          pConnection    pointer value;                                                                             1000894
    916+          sqlstmt        Like(UTF8) const options(*varsize);                                                        1000895
    917+        End-PR;                                                                                                     1000896
    918+                                                                                                                    1000897
    919+      // Return pointer to database connection. No options => will be default local database                        1000898
    920+        Dcl-PR json_sqlConnect Pointer extproc(*CWIDEN: 'nox_sqlConnect');                                          1000899
    921+          // json object or string with options                                                                     1000900
    922+          parms          Like(UTF8) const options(*nopass:*varsize);                                                1000901
    923+        End-PR;                                                                                                     1000902
    924+                                                                                                                    1000903
    925+      // Return pointer to database connection. No options => will be default local database                        1000904
    926+        Dcl-PR json_sqlDisconnect  extproc(*CWIDEN: 'nox_sqlDisconnect');                                           1000905
    927+           pConnection   pointer;                                                                                   1000906
    928+        End-PR;                                                                                                     1000907
    929+                                                                                                                    1000908
    930+      // Return sql code for previous statement                                                                     1000909
    931+        Dcl-PR json_sqlCode Int(10) extproc(*CWIDEN: 'nox_sqlCode');                                                1000910
    932+           pConnection   pointer value;                                                                             1000911
    933+        End-PR;                                                                                                     1000912
    934+                                                                                                                    1000913
    935+      // when the dataarea SQLTRACE is set, your SQL statements                                                     1000914
    936+      // are logged into SQLTRACE table.                                                                            1000915
    937+      // you can supply an exta eye-catch wariable :trcid                                                           1000916
    938+        Dcl-PR json_traceSetId  extproc(*CWIDEN : 'nox_traceSetId');                                                1000917
    939+          traceId        Int(20)    value; // Ccsid of inpur file                                                   1000918
    940+        End-PR;                                                                                                     1000919
    941+                                                                                                                    1000920
    942+                                                                                                                    1000921
    943+                                                                                                                    1000922
    944+                                                                                                                    1000923
    945+                                                                                                                    1000924
    946+                                                                                                                    1000925
    947+                                                                                                                    1000926
    948                                                                                                                      000023
    949         dcl-s id           int(10);                                                                                  000024
    950         dcl-s name         varchar(256);                                                                             000025
    951         dcl-s street       varchar(256);                                                                             000026
    952         dcl-s city         varchar(256);                                                                             000027
    953         dcl-s creditLimit  packed(15:2);                                                                             000028
    954         dcl-s created      date;                                                                                     000029
    955                                                                                                                      000030
    956         dcl-s debug        varchar(32766:4);                                                                         000031
    957         dcl-s msg          varchar(256);                                                                             000032
    958         dcl-s len          int(10);                                                                                  000033
  5770WDS V7R3M0  160422 RN        IBM ILE RPG             NOXDB2/EX01DEMO          DKSRV133   07-12-18 02:29:12        Page     25
 Line   <---------------------- Source Specifications ----------------------------------------------------->  Do  Change Src Seq
 Number ....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+...10  Num Date   Id  Number
    959         dcl-s checksum     int(10);                                                                                  000034
    960         dcl-s memuse       int(10);                                                                                  000035
    961         dcl-s pCustObject  pointer;                                                                                  000036
    962         dcl-s pCon         pointer;                                                                                  000037
    963         dcl-s pCustomer    pointer;                                                                                  000038
    964         dcl-s pCustList    pointer;                                                                                  000039
    965         dcl-s pMoreCust    pointer;                                                                                  000040
    966         dcl-s pTopFive     pointer;                                                                                  000041
    967         dcl-s pRes         pointer;                                                                                  000042
    968         dcl-s key          varchar(256) CCSID(*UTF8) inz('topFive[id=12345]');                                       000043
    969                                                                                                                      000044
    970         dcl-ds itList      likeds(json_iterator);                                                                    000045
    971                                                                                                                      000046
    972         //------------------------------------------------------------- *                                            000047
    973                                                                                                                      000048
    974         *inlr = *on;                                                                                                 000049
    975         memuse = json_memUse();                                                                                      000050
    976                                                                                                                      000051
    977         // Step 1: Lets build a JSON object from scratch                                                             000052
    978         // and let set some attirbutes on the object.                                                                000053
    979         // we use integers, string , fixed float numbers and date                                                    000054
    980         pCustomer = json_newObject();                                                                                000055
    981         json_setInt (pCustomer:'id'         : 12345);                                                                000056
    982         json_setStr (pCustomer:'name'       : 'System & Metod A/S');                                                 000057
    983         json_setStr (pCustomer:'street'     : 'H�ndv�rkersvinget 8');                                                000058
    984         json_setStr (pCustomer:'city'       : 'H�rsholm');                                                           000059
    985         json_setStr (pCustomer:'greeting'   : u'4f605978'); // "Ni hau" in unicode                                   000060
    986         json_setNum (pCustomer:'creditLimit': 76543.21);                                                             000061
    987         json_setDate(pCustomer:'created'    : %date());                                                              000062
    988                                                                                                                      000063
    989         // Just to see the progress:                                                                                 000064
    990         json_WriteJsonStmf(pCustomer : './test/documents/ex01Tutorial-Customer.json' : 1208 : *OFF);                 000065
    991         debug = json_asJsonText(pCustomer);                                                                          000066
    992                                                                                                                      000067
    993                                                                                                                      000068
    994         // Step 2: Build an array with customers                                                                     000069
    995         // note the arrayPush can push it to either head or tail                                                     000070
    996         pCustList = json_newArray();                                                                                 000071
    997         json_arrayPush ( pCustList : pCustomer);                                                                     000072
    998                                                                                                                      000073
    999         // Just to see the progress:                                                                                 000074
   1000         debug = json_asJsonText(pCustList);                                                                          000075
  5770WDS V7R3M0  160422 RN        IBM ILE RPG             NOXDB2/EX01DEMO          DKSRV133   07-12-18 02:29:12        Page     26
 Line   <---------------------- Source Specifications ----------------------------------------------------->  Do  Change Src Seq
 Number ....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+...10  Num Date   Id  Number
   1001                                                                                                                      000076
   1002         // step3: now we get the rest of customers from the database;                                                000077
   1003         pCon = json_sqlConnect();                                                                                    000078
   1004         pMoreCust = json_sqlResultset(pCon:                                                                          000079
   1005             'select                       -                                                                          000080
   1006                 cusnum  as "id",          -                                                                          000081
   1007                 lstnam  as "name",        -                                                                          000082
   1008                 street  as "street",      -                                                                          000083
   1009                 cdtlmt  as "creditLimit"  -                                                                          000084
   1010             from qiws.QCUSTCDT            -                                                                          000085
   1011         ');                                                                                                          000086
   1012         json_sqlDisconnect(pCon);                                                                                    000087
   1013                                                                                                                      000088
   1014         // Just to see the progress:                                                                                 000089
   1015         debug = json_asJsonText(pMoreCust);                                                                          000090
   1016                                                                                                                      000091
   1017         // now we have the list                                                                                      000092
   1018         // Note: the MOVE_UNLINK can be used if the array was already                                                000093
   1019         // a sub-node in an other object/array. here it just an example and have no effect                           000094
   1020         // Also you can omit the result - but returns the receiving array so you can "chain" this fu                 000095
  ...   nction
   1021         // ie "moveObjectInto"                                                                                       000096
   1022         pRes  = json_arrayAppend(pCustList : pMoreCust: JSON_MOVE_UNLINK);                                           000097
   1023                                                                                                                      000098
   1024         // How many are there in the array?                                                                          000099
   1025         len  = json_getLength(pCustList);                                                                            000100
   1026                                                                                                                      000101
   1027         // Just to see the progress:                                                                                 000102
   1028         debug = json_asJsonText(pCustList);                                                                          000103
   1029                                                                                                                      000104
   1030         // Lets sort the array on highest "creditLimit" and then "name"                                              000105
   1031         json_arraySort(pCustList : 'creditLimit:DESC,name:ASC' );                                                    000106
   1032                                                                                                                      000107
   1033         // Just to see the progress:                                                                                 000108
   1034         debug = json_asJsonText(pCustList);                                                                          000109
   1035                                                                                                                      000110
   1036         // I only want the first 5                                                                                   000111
   1037         // Note the first element is = 0                                                                             000112
   1038         // You can also use JSON_MOVE_UNLINK, to carve the result out of the source                                  000113
   1039         // however, here we copy the elements to a new array                                                         000114
   1040         pTopFive = json_arraySlice(pCustList : 0: 5 : JSON_COPY_CLONE);                                              000115
   1041                                                                                                                      000116
   1042         // Just to see the progress:                                                                                 000117
   1043         debug = json_asJsonText(pTopFive);                                                                           000118
  5770WDS V7R3M0  160422 RN        IBM ILE RPG             NOXDB2/EX01DEMO          DKSRV133   07-12-18 02:29:12        Page     27
 Line   <---------------------- Source Specifications ----------------------------------------------------->  Do  Change Src Seq
 Number ....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+...10  Num Date   Id  Number
   1044                                                                                                                      000119
   1045         // we can caluculate the checksum, to see later if anyone have touched the object graph                      000120
   1046         checksum = json_NodeCheckSum(pTopFive);                                                                      000121
   1047                                                                                                                      000122
   1048         // and save it to disk:                                                                                      000123
   1049         // You can use UTF8_BOM it you need the BOM-siganture                                                        000124
   1050         json_WriteJsonStmf(pTopFive : './test/documents/ex01Tutorial.json' : 1208 : *OFF);                           000125
   1051                                                                                                                      000126
   1052         // Now what do we need to clean up:                                                                          000127
   1053         // pCustList? yes                                                                                            000128
   1054         // pCustomer? no - it is already removed when deleting the pCustList                                         000129
   1055         // pTopFive? Yes - it is a clone                                                                             000130
   1056         json_delete(pCustList);                                                                                      000131
   1057         json_delete(pTopFive);                                                                                       000132
   1058                                                                                                                      000133
   1059         // We could stop the program here - But let's have som more fun:                                             000134
   1060         // Load the top five array                                                                                   000135
   1061         pTopFive = json_ParseFile ('./test/documents/ex01Tutorial.json');                                            000136
   1062                                                                                                                      000137
   1063         // Just to see the progress:                                                                                 000138
   1064         debug = json_asJsonText(pTopFive);                                                                           000139
   1065                                                                                                                      000140
   1066         // Was there som issues?                                                                                     000141
   1067         if Json_Error(pTopFive) ;                                                                    B01             000142
   1068             msg = Json_Message(pTopFive);                                                             01             000143
   1069             Json_dump(pTopFive);                                                                      01             000144
   1070             Json_delete(pTopFive);                                                                    01             000145
   1071             return;                                                                                   01             000146
   1072         endif;                                                                                       E01             000147
   1073                                                                                                                      000148
   1074         // Is the checksum the same?                                                                                 000149
   1075         if checksum <> json_NodeCheckSum(pTopFive);                                                  B01             000150
   1076             dsply 'Invlaid checksum';                                                                 01             000151
   1077         endif;                                                                                       E01             000152
   1078                                                                                                                      000153
   1079         // now create a object with that array and call it "topFive":                                                000154
   1080         pCustObject = json_newObject();                                                                              000155
   1081         json_moveObjectInto (pCustObject: 'topFive': pTopFive );                                                     000156
   1082                                                                                                                      000157
   1083         // Just to see the progress:                                                                                 000158
   1084         debug = json_asJsonText(pCustObject);                                                                        000159
   1085                                                                                                                      000160
   1086         // let's loop through all items and get them back to RPG variables:                                          000161
   1087         // note: we could have used pTopFive - but for fun we locate from the top                                    000162
  5770WDS V7R3M0  160422 RN        IBM ILE RPG             NOXDB2/EX01DEMO          DKSRV133   07-12-18 02:29:12        Page     28
 Line   <---------------------- Source Specifications ----------------------------------------------------->  Do  Change Src Seq
 Number ....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+...10  Num Date   Id  Number
   1088         itList = json_setIterator(pCustObject : 'topFive');                                                          000163
   1089         dow json_ForEach(itList);                                                                    B01             000164
   1090             id          = json_getInt ( itList.this : 'id');                                          01             000165
   1091             name        = json_getStr ( itList.this : 'name');                                        01             000166
   1092             street      = json_getStr ( itList.this : 'street');                                      01             000167
   1093             city        = json_getStr ( itList.this : 'city');                                        01             000168
   1094             creditLimit = json_getNum ( itList.this : 'creditLimit');                                 01             000169
   1095             created     = json_getDate( itList.this : 'created');                                     01             000170
   1096         enddo;                                                                                       E01             000171
   1097                                                                                                                      000172
   1098                                                                                                                      000173
   1099         // Locate the first node with id = 593029.                                                                   000174
   1100         // the indexfor the array can be the indexnumber OR a simple element test (=,>,<,<=,>= are s                 000175
  ...   upported)
   1101         pCustomer   = Json_Locate(pCustObject: 'topFive[id=12345]');                                                 000176
   1102                                                                                                                      000177
   1103                                                                                                                      000178
   1104         // Note: You have to be carefull with the source is in the right CCSID for ROG to convert th                 000179
  ...   e
   1105         // strings ( if they contains national charaters and/or brackets like{}[] )                                  000180
   1106         // if you run into issues, you can define them as const as in the                                            000181
   1107         // example below: it is suppose to do the same as abowe                                                      000182
   1108         pCustomer   = Json_Locate(pCustObject: key);                                                                 000183
   1109                                                                                                                      000184
   1110         id          = json_getInt ( pCustomer : 'id');                                                               000185
   1111         name        = json_getStr ( pCustomer : 'name');                                                             000186
   1112         street      = json_getStr ( pCustomer : 'street');                                                           000187
   1113         city        = json_getStr ( pCustomer : 'city');                                                             000188
   1114         creditLimit = json_getNum ( pCustomer : 'creditLimit');                                                      000189
   1115         created     = json_getDate( pCustomer : 'created');                                                          000190
   1116                                                                                                                      000191
   1117         // Just to see the progress:                                                                                 000192
   1118         debug = json_asJsonText(pCustomer);                                                                          000193
   1119                                                                                                                      000194
   1120         // That's it - time to cleanup:                                                                              000195
   1121         json_delete(pCustomer);                                                                                      000196
   1122                                                                                                                      000197
   1123         if memuse <> json_memuse();                                                                  B01             000198
   1124             dsply 'Ups - forgot to clean something up';                                               01             000199
   1125         endif;                                                                                       E01             000200
   1126                                                                                                                      000201
   1127         Return;                                                                                                      000202
        * * * * *   E N D   O F   S O U R C E   * * * * *
  5770WDS V7R3M0  160422 RN        IBM ILE RPG             NOXDB2/EX01DEMO          DKSRV133   07-12-18 02:29:12        Page     29
 Line   <---------------------- Source Specifications ----------------------------------------------------->  Do  Change Src Seq
 Number ....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+...10  Num Date   Id  Number
  5770WDS V7R3M0  160422 RN        IBM ILE RPG             NOXDB2/EX01DEMO          DKSRV133   07-12-18 02:29:12        Page     30
           A d d i t i o n a l   D i a g n o s t i c   M e s s a g e s
  Msg id  Sv Number Seq     Message text
 *RNF5409 00    981 000056  The prototyped call returns a value which is lost when
                            CALLP is used.
 *RNF5409 00    982 000057  The prototyped call returns a value which is lost when
                            CALLP is used.
 *RNF5409 00    983 000058  The prototyped call returns a value which is lost when
                            CALLP is used.
 *RNF5409 00    984 000059  The prototyped call returns a value which is lost when
                            CALLP is used.
 *RNF5409 00    985 000060  The prototyped call returns a value which is lost when
                            CALLP is used.
 *RNF5409 00    986 000061  The prototyped call returns a value which is lost when
                            CALLP is used.
 *RNF5409 00    987 000062  The prototyped call returns a value which is lost when
                            CALLP is used.
 *RNF5409 00    997 000072  The prototyped call returns a value which is lost when
                            CALLP is used.
 *RNF5409 00   1031 000106  The prototyped call returns a value which is lost when
                            CALLP is used.
 *RNF5409 00   1081 000156  The prototyped call returns a value which is lost when
                            CALLP is used.
  * * * * *   E N D   O F   A D D I T I O N A L   D I A G N O S T I C   M E S S A G E S   * * * * *
                             / C o p y   M e m b e r s
 Line   Src  RPG name   <-------- External name -------> CCSID  <- Last change ->
 Number Id              Library    File       Member            Date     Time
     22    1 noxdbJSON+ ./headers/noxDB2JSON.rpgle          819  06-12-18 23:40:39
          * * * * *   E N D   O F   / C O P Y   M E M B E R S   * * * * *
  5770WDS V7R3M0  160422 RN        IBM ILE RPG             NOXDB2/EX01DEMO          DKSRV133   07-12-18 02:29:12        Page     31
                           C r o s s   R e f e r e n c e
       File and Record References:
          File              Device             References (D=Defined)
            Record
          No references in the source.
       Global Field References:
          Field             Attributes         References (D=Defined M=Modified)
          *INLR             N(1)                  974M
          CHECKSUM          I(10,0)               959D   1046M   1075
          CITY              A(256)                952D   1093M   1113M
                            VARYING(2)
          CREATED           D(10*ISO-)            954D   1095M   1115M
          CREDITLIMIT       P(15,2)               953D   1094M   1114M
          DEBUG             A(32766)              956D    991M   1000M   1015M
                            VARYING(4)           1028M   1034M   1043M   1064M
                                                 1084M   1118M
          ID                I(10,0)               949D   1090M   1110M
          ITLIST            DS(145)               970D   1088M   1089    1090
                                                 1091    1092    1093    1094
                                                 1095
            THIS            *(16)                1090    1091    1092    1093
                                                 1094    1095
 *RNF7031 JSON_ALLOW_PRIMITIVES...
                            CONST                  66D
 *RNF7031 JSON_ALLROWS      CONST                 784D
 *RNF7031 JSON_APPROXIMATE_TOTALROWS...
                            CONST                 801D
 *RNF7031 JSON_ARRAY        CONST                  49D
          JSON_ARRAYAPPEND  *(16)                 447D   1022
                            PROTOTYPE
          JSON_ARRAYPUSH    *(16)                 433D    997M
                            PROTOTYPE
          JSON_ARRAYSLICE   *(16)                 457D   1040
                            PROTOTYPE
          JSON_ARRAYSORT    *(16)                 469D   1031M
                            PROTOTYPE
          JSON_ASJSONTEXT   A(1048572)            542D    991    1000    1015
                            VARYING(4)           1028    1034    1043    1064
                            CCSID(1208)          1084    1118
                            PROTOTYPE
 *RNF7031 JSON_ASJSONTEXTMEM...
  5770WDS V7R3M0  160422 RN        IBM ILE RPG             NOXDB2/EX01DEMO          DKSRV133   07-12-18 02:29:12        Page     32
                            U(10,0)               547D
                            PROTOTYPE
 *RNF7031 JSON_ASXMLTEXT    A(1048572)            569D
                            VARYING(4)
                            CCSID(1208)
                            PROTOTYPE
 *RNF7031 JSON_ASXMLTEXTMEM U(10,0)               574D
                            PROTOTYPE
 *RNF7031 JSON_BY_CONTEXT   CONST                  58D
 *RNF7031 JSON_CHILD_LIST   CONST                  86D
 *RNF7031 JSON_CLEAR        PROTOTYPE             696D
 *RNF7031 JSON_CLOSE        PROTOTYPE             701D
          JSON_COPY_CLONE   CONST                 444D   1040
 *RNF7031 JSON_COPYVALUE    *(16)                 383D
                            PROTOTYPE
          JSON_DELETE       PROTOTYPE             400D   1056M   1057M   1070M
                                                 1121M
 *RNF7031 JSON_DONTREPLACE  CONST                 501D
          JSON_DUMP         PROTOTYPE             523D   1069M
          JSON_ERROR        N(1)                  108D   1067
                            PROTOTYPE
 *RNF7031 JSON_EVAL         CONST                  50D
 *RNF7031 JSON_FIELDS       CONST                 792D
          JSON_FOREACH      N(1)                  637D   1089
                            PROTOTYPE
 *RNF7031 JSON_GETATTRFIRST *(16)                 678D
                            PROTOTYPE
 *RNF7031 JSON_GETATTRNAME  A(1048572)            689D
                            VARYING(4)
                            CCSID(1208)
                            PROTOTYPE
 *RNF7031 JSON_GETATTRNEXT  *(16)                 684D
                            PROTOTYPE
 *RNF7031 JSON_GETATTRVALUE A(1048572)            660D
                            VARYING(4)
                            CCSID(1208)
                            PROTOTYPE
 *RNF7031 JSON_GETCHILD     *(16)                 198D
                            PROTOTYPE
          JSON_GETDATE      D(10*ISO-)            374D   1095    1115
                            PROTOTYPE
          JSON_GETINT       I(20,0)               365D   1090    1110
                            PROTOTYPE
          JSON_GETLENGTH    I(10,0)               495D   1025
                            PROTOTYPE
 *RNF7031 JSON_GETMESSAGEOBJECT...
  5770WDS V7R3M0  160422 RN        IBM ILE RPG             NOXDB2/EX01DEMO          DKSRV133   07-12-18 02:29:12        Page     33
                            *(16)                 123D
                            PROTOTYPE
 *RNF7031 JSON_GETNAME      A(1048572)            308D
                            VARYING(4)
                            CCSID(1208)
                            PROTOTYPE
 *RNF7031 JSON_GETNAMEASPATH...
                            A(1048572)            314D
                            VARYING(4)
                            CCSID(1208)
                            PROTOTYPE
 *RNF7031 JSON_GETNEXT      *(16)                 192D
                            PROTOTYPE
 *RNF7031 JSON_GETNODEATTRVALUE...
                            A(1048572)            642D
                            VARYING(4)
                            CCSID(1208)
                            PROTOTYPE
          JSON_GETNUM       P(30,15)              356D   1094    1114
                            PROTOTYPE
 *RNF7031 JSON_GETPARENT    *(16)                 204D
                            PROTOTYPE
          JSON_GETSTR       A(1048572)            332D   1091    1092    1093
                            VARYING(4)           1111    1112    1113
                            CCSID(1208)
                            PROTOTYPE
 *RNF7031 JSON_GETSTRJOIN   A(1048572)            342D
                            VARYING(4)
                            CCSID(1208)
                            PROTOTYPE
 *RNF7031 JSON_GETVALUEINT  I(20,0)               295D
                            PROTOTYPE
 *RNF7031 JSON_GETVALUENUM  P(30,15)              287D
                            PROTOTYPE
 *RNF7031 JSON_GETVALUEPTR  *(16)                 301D
                            PROTOTYPE
 *RNF7031 JSON_GETVALUESTR  A(1048572)            279D
                            VARYING(4)
                            CCSID(1208)
                            PROTOTYPE
 *RNF7031 JSON_HAS          N(1)                  154D
                            PROTOTYPE
 *RNF7031 JSON_HTTPREQUEST  *(16)                 728D
                            PROTOTYPE
 *RNF7031 JSON_IGNORE_CASE  CONST                 492D
 *RNF7031 JSON_ISNODE       N(1)                  178D
  5770WDS V7R3M0  160422 RN        IBM ILE RPG             NOXDB2/EX01DEMO          DKSRV133   07-12-18 02:29:12        Page     34
                            PROTOTYPE
 *RNF7031 JSON_ISNULL       N(1)                  170D
                            PROTOTYPE
 *RNF7031 JSON_ISTRUE       N(1)                  162D
                            PROTOTYPE
          JSON_ITERATOR     DS(145)               602D    620     627     638
                            BASED(PROTOTYPE+)     970
 *RNF7031   BREAK           N(1)                  616D
 *RNF7031   COMMA           A(1)                  609D
                            VARYING(2)
 *RNF7031   COUNT           I(10,0)               610D
 *RNF7031   FILLER          A(64)                 617D
 *RNF7031   ISFIRST         N(1)                  606D
 *RNF7031   ISLAST          N(1)                  607D
 *RNF7031   ISLIST          N(1)                  605D
 *RNF7031   ISRECURSIVE     N(1)                  608D
 *RNF7031   LENGTH          I(10,0)               611D
 *RNF7031   LISTARR         *(16)                 614D
 *RNF7031   ROOT            *(16)                 603D
 *RNF7031   SIZE            I(10,0)               612D
 *RNF7031   THIS            *(16)                 604D
 *RNF7031 JSON_LITERAL      CONST                  54D
          JSON_LOCATE       *(16)                 138D   1101    1108
                            PROTOTYPE
 *RNF7031 JSON_LOCATEORCREATE...
                            *(16)                 146D
                            PROTOTYPE
 *RNF7031 JSON_LOOKUPVALUE  *(16)                 481D
                            PROTOTYPE
 *RNF7031 JSON_MAPIX        N(1)                  719D
                            PROTOTYPE
 *RNF7031 JSON_MEMLEAK      N(1)                  706D
                            PROTOTYPE
 *RNF7031 JSON_MEMSTAT      PROTOTYPE             710D
          JSON_MEMUSE       U(20,0)               714D    975    1123
                            PROTOTYPE
 *RNF7031 JSON_MERGEOBJECTS *(16)                 505D
                            PROTOTYPE
          JSON_MESSAGE      A(1024)               115D   1068
                            VARYING(2)
                            PROTOTYPE
 *RNF7031 JSON_META         CONST                 790D
 *RNF7031 JSON_MOVE_NODES   CONST                  64D
          JSON_MOVE_UNLINK  CONST                 443D   1022
          JSON_MOVEOBJECTINTO...
                            *(16)                 515D   1081M
  5770WDS V7R3M0  160422 RN        IBM ILE RPG             NOXDB2/EX01DEMO          DKSRV133   07-12-18 02:29:12        Page     35
                            PROTOTYPE
          JSON_NEWARRAY     *(16)                 429D    996
                            PROTOTYPE
          JSON_NEWOBJECT    *(16)                 424D    980    1080
                            PROTOTYPE
          JSON_NODECHECKSUM U(10,0)               419D   1046    1075
                            PROTOTYPE
 *RNF7031 JSON_NODECLONE    *(16)                 394D
                            PROTOTYPE
 *RNF7031 JSON_NODERENAME   N(1)                  184D
                            PROTOTYPE
 *RNF7031 JSON_NODESANITIZE PROTOTYPE             412D
 *RNF7031 JSON_NODETYPE     I(5,0)                323D
                            PROTOTYPE
 *RNF7031 JSON_NODEUNLINK   *(16)                 407D
                            PROTOTYPE
 *RNF7031 JSON_OBJCOPY      CONST                  57D
 *RNF7031 JSON_OBJECT       CONST                  48D
 *RNF7031 JSON_OBJLINK      CONST                  55D
 *RNF7031 JSON_OBJMOVE      CONST                  59D
 *RNF7031 JSON_OBJREPLACE   CONST                  56D
 *RNF7031 JSON_PARSE        CONST                  70D
          JSON_PARSEFILE    *(16)                  90D   1061
                            PROTOTYPE
 *RNF7031 JSON_PARSESTRINGVC...
                            *(16)                  96D
                            PROTOTYPE
 *RNF7031 JSON_POINTER_VALUE...
                            CONST                  51D
 *RNF7031 JSON_REPLACE      CONST                 502D
 *RNF7031 JSON_ROOT         CONST                  53D
 *RNF7031 JSON_ROWARRAY     CONST                 788D
 *RNF7031 JSON_SAME_CASE    CONST                 491D
 *RNF7031 JSON_SETATTRVALUE PROTOTYPE             668D
 *RNF7031 JSON_SETBOOL      *(16)                 252D
                            PROTOTYPE
          JSON_SETDATE      *(16)                 233D    987M
                            PROTOTYPE
 *RNF7031 JSON_SETDECPOINT  PROTOTYPE             102D
 *RNF7031 JSON_SETEVAL      *(16)                 209D
                            PROTOTYPE
          JSON_SETINT       *(16)                 224D    981M
                            PROTOTYPE
          JSON_SETITERATOR  DS(145)               620D   1088
                            PROTOTYPE
 *RNF7031 JSON_SETNODEATTRVALUE...
  5770WDS V7R3M0  160422 RN        IBM ILE RPG             NOXDB2/EX01DEMO          DKSRV133   07-12-18 02:29:12        Page     36
                            PROTOTYPE             651D
          JSON_SETNUM       *(16)                 243D    986M
                            PROTOTYPE
 *RNF7031 JSON_SETPROCPTR   *(16)                 272D
                            PROTOTYPE
 *RNF7031 JSON_SETPTR       *(16)                 261D
                            PROTOTYPE
 *RNF7031 JSON_SETRECURSIVEITERATOR...
                            DS(145)               627D
                            PROTOTYPE
          JSON_SETSTR       *(16)                 215D    982M    983M    984M
                            PROTOTYPE             985M
 *RNF7031 JSON_SQLCLOSE     PROTOTYPE             849D
 *RNF7031 JSON_SQLCODE      I(10,0)               931D
                            PROTOTYPE
 *RNF7031 JSON_SQLCOLUMNS   I(10,0)               835D
                            PROTOTYPE
          JSON_SQLCONNECT   *(16)                 920D   1003
                            PROTOTYPE
          JSON_SQLDISCONNECT...
                            PROTOTYPE             926D   1012M
 *RNF7031 JSON_SQLEXEC      N(1)                  856D
                            PROTOTYPE
 *RNF7031 JSON_SQLFETCHNEXT *(16)                 828D
                            PROTOTYPE
 *RNF7031 JSON_SQLFETCHRELATIVE...
                            *(16)                 818D
                            PROTOTYPE
 *RNF7031 JSON_SQLGETINSERTID...
                            I(10,0)               907D
                            PROTOTYPE
 *RNF7031 JSON_SQLGETMETA   *(16)                 913D
                            PROTOTYPE
 *RNF7031 JSON_SQLINSERT    N(1)                  881D
                            PROTOTYPE
 *RNF7031 JSON_SQLOPEN      *(16)                 807D
                            PROTOTYPE
 *RNF7031 JSON_SQLRESULTROW *(16)                 755D
                            PROTOTYPE
          JSON_SQLRESULTSET *(16)                 768D   1004
                            PROTOTYPE
 *RNF7031 JSON_SQLROWS      I(10,0)               843D
                            PROTOTYPE
 *RNF7031 JSON_SQLSETOPTIONS...
                            PROTOTYPE             746D
 *RNF7031 JSON_SQLUPDATE    N(1)                  867D
  5770WDS V7R3M0  160422 RN        IBM ILE RPG             NOXDB2/EX01DEMO          DKSRV133   07-12-18 02:29:12        Page     37
                            PROTOTYPE
 *RNF7031 JSON_SQLUPSERT    N(1)                  893D
                            PROTOTYPE
 *RNF7031 JSON_STREAM       *(16)                 582D
                            PROTOTYPE
 *RNF7031 JSON_SUCCESSTRUE  *(16)                 131D
                            PROTOTYPE
 *RNF7031 JSON_TOTALROWS    CONST                 795D
 *RNF7031 JSON_TRACESETID   PROTOTYPE             938D
 *RNF7031 JSON_UNKNOWN      CONST                  47D
 *RNF7031 JSON_UPPERCASE    CONST                 797D
 *RNF7031 JSON_USE_LOCALE   CONST                 478D
 *RNF7031 JSON_VALUE        CONST                  52D
 *RNF7031 JSON_WRITECSVSTMF PROTOTYPE             588D
          JSON_WRITEJSONSTMF...
                            PROTOTYPE             530D    990M   1050M
 *RNF7031 JSON_WRITEXMLSTMF PROTOTYPE             557D
          KEY               A(256)                968D   1108
                            VARYING(2)
                            CCSID(1208)
          LEN               I(10,0)               958D   1025M
          MEMUSE            I(10,0)               960D    975M   1123
 *RNF7031 MO_MERGE_MATCH    CONST                  80D
 *RNF7031 MO_MERGE_NEW      CONST                  78D
 *RNF7031 MO_MERGE_REPLACE  CONST                  83D
          MSG               A(256)                957D   1068M
                            VARYING(2)
          NAME              A(256)                950D   1091M   1111M
                            VARYING(2)
          PCON              *(16)                 962D   1003M   1004    1012
          PCUSTLIST         *(16)                 964D    996M    997    1000
                                                 1022    1025    1028    1031
                                                 1034    1040    1056
          PCUSTOBJECT       *(16)                 961D   1080M   1081    1084
                                                 1088    1101    1108
          PCUSTOMER         *(16)                 963D    980M    981     982
                                                  983     984     985     986
                                                  987     990     991     997
                                                 1101M   1108M   1110    1111
                                                 1112    1113    1114    1115
                                                 1118    1121
          PMORECUST         *(16)                 965D   1004M   1015    1022
          PRES              *(16)                 967D   1022M
          PROTOTYPE_ONLY    *(16)                 602
          PTOPFIVE          *(16)                 966D   1040M   1043    1046
                                                 1050    1057    1061M   1064
  5770WDS V7R3M0  160422 RN        IBM ILE RPG             NOXDB2/EX01DEMO          DKSRV133   07-12-18 02:29:12        Page     38
                                                 1067    1068    1069    1070
                                                 1075    1081
          STREET            A(256)                951D   1092M   1112M
                            VARYING(2)
          UTF8              A(1048572)             41D     98     125     126
                            VARYING(4)            132     133     142     150
                            CCSID(1208)           158     166     174     188
                            TEMPLATE              211     212     219     221
                                                  228     237     247     256
                                                  265     275     279     284
                                                  305     308     314     332
                                                  336     338     342     347
                                                  349     360     369     378
                                                  387     391     473     485
                                                  518     542     569     624
                                                  633     642     646     648
                                                  655     657     660     665
                                                  672     674     689     730
                                                  734     750     759     761
                                                  772     780     811     860
                                                  862     871     875     885
                                                  889     897     901     916
                                                  922
 *RNF7031 UTF8_BOM          CONST                  42D
       Indicator References:
          Indicator                            References (D=Defined M=Modified)
          LR                                      974M
        * * * * *   E N D   O F   C R O S S   R E F E R E N C E   * * * * *
  5770WDS V7R3M0  160422 RN        IBM ILE RPG             NOXDB2/EX01DEMO          DKSRV133   07-12-18 02:29:12        Page     39
                       E x t e r n a l   R e f e r e n c e s
       Statically bound procedures:
          Procedure                            References
          nox_Dump                                523    1069
          nox_Error                               108    1067
          nox_HasVC                               154
          nox_Clear                               696
          nox_Close                               701
          nox_MapIx                               719
          nox_isNode                              178
          nox_Delete                              400    1056    1057    1070
                                                 1121
          nox_Stream                              582
          nox_MemUse                              714     975    1123
          nox_ForEach                             637    1089
          nox_MemLeak                             706
          nox_MemStat                             710
          nox_sqlRows                             843
          nox_sqlCode                             931
          nox_IsTrueVC                            162
          nox_IsNullVC                            170
          nox_NewArray                            429     996
          nox_sqlClose                            849
          nox_ParseFile                            90    1061
          nox_MessageVC                           115    1068
          nox_GetNodeVC                           138    1101    1108
          nox_NodeClone                           394
          nox_NewObject                           424     980    1080
          nox_ArrayPush                           433     997
          nox_getLength                           495    1025
          nox_AsXmlText                           569
          nox_sqlOpenVC                           807
          nox_sqlExecVC                           856
          nox_GetValueVC                          332    1091    1092    1093
                                                 1111    1112    1113
          nox_NodeUnlink                          407
          nox_ArraySlice                          457    1040
          nox_AsJsonText                          542     991    1000    1015
                                                 1028    1034    1043    1064
                                                 1084    1118
          nox_sqlColumns                          835
          nox_sqlConnect                          920    1003
          nox_traceSetId                          938
          nox_SetDecPoint                         102
          nox_SuccessTrue                         131
  5770WDS V7R3M0  160422 RN        IBM ILE RPG             NOXDB2/EX01DEMO          DKSRV133   07-12-18 02:29:12        Page     40
          nox_GetNodeNext                         192
          nox_GetNodeType                         323
          nox_CopyValueVC                         383
          nox_ArrayAppend                         447    1022
          nox_ArraySortVC                         469    1031
          nox_GetAttrNext                         684
          nox_httpRequest                         728
          nox_sqlUpdateVC                         867
          nox_sqlInsertVC                         881
          nox_sqlUpsertVC                         893
          nox_NodeRenameVC                        184
          nox_GetNodeChild                        198
          nox_GetStrJoinVC                        343
          nox_NodeSanitize                        412
          nox_NodeCheckSum                        419    1046    1075
          nox_MergeObjects                        505
          nox_WriteXmlStmf                        557
          nox_AsXmlTextMem                        574
          nox_WriteCsvStmf                        588
          nox_SetAttrValue                        668
          nox_GetAttrFirst                        678
          nox_sqlFetchNext                        828
          nox_sqlGetMetaVC                        913
          nox_ParseStringVC                        96
          nox_GetNodeParent                       204
          nox_GetNodeNameVC                       309
          nox_GetValueNumVC                       356    1094    1114
          nox_GetValueIntVC                       365    1090    1110
          nox_lookupValueVC                       481
          nox_WriteJsonStmf                       530     990    1050
          nox_AsJsonTextMem                       547
          nox_SetIteratorVC                       620    1088
          nox_GetAttrNameVC                       690
          nox_sqlSetOptions                       746
          nox_sqlDisconnect                       926    1012
          nox_SetStrByNameVC                      215     982     983     984
                                                  985
          nox_SetIntByNameVC                      224     981
          nox_SetDecByNameVC                      243     986
          nox_SetPtrByNameVC                      261     272
          nox_GetNodeValueVC                      280
          nox_GetValueDateVC                      374    1095    1115
          nox_NodeMoveIntoVC                      515    1081
          nox_GetAttrValueVC                      661
          nox_sqlResultRowVC                      755
          nox_sqlResultSetVC                      768    1011
  5770WDS V7R3M0  160422 RN        IBM ILE RPG             NOXDB2/EX01DEMO          DKSRV133   07-12-18 02:29:12        Page     41
          nox_sqlGetInsertId                      907
          nox_SetEvalByNameVC                     209
          nox_SetDateByNameVC                     233     987
          nox_SetBoolByNameVC                     252
          nox_GetNodeValueNum                     288
          nox_GetNodeValueInt                     295
          nox_GetNodeValuePtr                     301
          nox_GetMessageObject                    124
          nox_sqlFetchRelative                    819
          nox_GetOrCreateNodeVC                   146
          nox_GetNodeNameAsPath                   315
          nox_GetNodeAttrValueVC                  642
          nox_SetNodeAttrValueVC                  651
          nox_SetRecursiveIteratorVC              629
       Imported fields:
          Field             Attributes         Defined
          No references in the source.
       Exported fields:
          Field             Attributes         Defined
          No references in the source.
    * * * * *   E N D   O F   E X T E R N A L   R E F E R E N C E S   * * * * *
  5770WDS V7R3M0  160422 RN        IBM ILE RPG             NOXDB2/EX01DEMO          DKSRV133   07-12-18 02:29:12        Page     42
                           M e s s a g e   S u m m a r y
  Msg id  Sv Number Message text
 *RNF5409 00     10 The prototyped call returns a value which is lost when CALLP
                    is used.
 *RNF7031 00    125 The name or indicator is not referenced.
        * * * * *   E N D   O F   M E S S A G E   S U M M A R Y   * * * * *
  5770WDS V7R3M0  160422 RN        IBM ILE RPG             NOXDB2/EX01DEMO          DKSRV133   07-12-18 02:29:12        Page     43
                             F i n a l   S u m m a r y
   Message Totals:
     Information  (00) . . . . . . . :      135
     Warning      (10) . . . . . . . :        0
     Error        (20) . . . . . . . :        0
     Severe Error (30+)  . . . . . . :        0
     ---------------------------------  -------
     Total . . . . . . . . . . . . . :      135
   Source Totals:
     Records . . . . . . . . . . . . :     1127
     Specifications  . . . . . . . . :      557
     Data records  . . . . . . . . . :        0
     Comments  . . . . . . . . . . . :      561
          * * * * *   E N D   O F   F I N A L   S U M M A R Y   * * * * *
 Program EX01DEMO placed in library NOXDB2. 00 highest severity. Created on 07-12-18 at 02:29:12.
           * * * * *   E N D   O F   C O M P I L A T I O N   * * * * *
  5770SS1 V7R3M0 160422                      Display Job                                          7-12-18  2:29:12         Page   1
  Job . . . :   QP0ZSPWP     User . . . :   QSECOFR       Number . . . . :   293820
                                       Job Status Attributes
    Status of job  . . . . . . . . . . . . . . . :   ACTIVE
    Current user profile . . . . . . . . . . . . :   NLI
    Job user identity  . . . . . . . . . . . . . :   NLI
      Set by . . . . . . . . . . . . . . . . . . :     *DEFAULT
    Entered system:
      Date . . . . . . . . . . . . . . . . . . . :   07-12-18
      Time . . . . . . . . . . . . . . . . . . . :   02:29:12
    Started:
      Date . . . . . . . . . . . . . . . . . . . :   07-12-18
      Time . . . . . . . . . . . . . . . . . . . :   02:29:12
    Subsystem  . . . . . . . . . . . . . . . . . :   QUSRWRK
      Subsystem pool ID  . . . . . . . . . . . . :
    Submitted by
      Job name . . . . . . . . . . . . . . . . . :   QP0ZSPWP
      User . . . . . . . . . . . . . . . . . . . :   QSECOFR
      Number . . . . . . . . . . . . . . . . . . :   293819
    Type of job  . . . . . . . . . . . . . . . . :   BCI
    Special environment  . . . . . . . . . . . . :   *NONE
    Program return code  . . . . . . . . . . . . :   0
    Controlled end requested . . . . . . . . . . :   NO
    System . . . . . . . . . . . . . . . . . . . :   DKSRV133
  5770SS1 V7R3M0 160422                      Display Job                                          7-12-18  2:29:12         Page   2
  Job . . . :   QP0ZSPWP     User . . . :   QSECOFR       Number . . . . :   293820
                                     Job Definition Attributes
    Job description  . . . . . . . . . . . . . . :   JOBD         QDFTSVR
      Library  . . . . . . . . . . . . . . . . . :                  QGPL
      ASP device . . . . . . . . . . . . . . . . :                  *SYSBAS
    Job queue  . . . . . . . . . . . . . . . . . :   JOBQ
      Library  . . . . . . . . . . . . . . . . . :
      ASP device . . . . . . . . . . . . . . . . :
    Job priority (on job queue)  . . . . . . . . :   JOBPTY
    Output priority (on output queue). . . . . . :   OUTPTY       5
    End severity . . . . . . . . . . . . . . . . :   ENDSEV       30
    Message logging:                                 LOG
      Level  . . . . . . . . . . . . . . . . . . :                4
      Severity . . . . . . . . . . . . . . . . . :                0
      Text . . . . . . . . . . . . . . . . . . . :                *NOLIST
    Log CL program commands  . . . . . . . . . . :   LOGCLPGM     *NO
    Job log output . . . . . . . . . . . . . . . :   LOGOUTPUT    *PND
    Printer device . . . . . . . . . . . . . . . :   PRTDEV       PRT01
    Default output queue . . . . . . . . . . . . :   OUTQ         *DEV
      Library  . . . . . . . . . . . . . . . . . :
    Job date . . . . . . . . . . . . . . . . . . :   DATE         05-06-2018
    Date format  . . . . . . . . . . . . . . . . :   DATFMT       *DMY
    Date separator . . . . . . . . . . . . . . . :   DATSEP       -
    Time separator . . . . . . . . . . . . . . . :   TIMSEP       :
    Job time:                                        DATETIME
      Current date . . . . . . . . . . . . . . . :                07-12-2018
      Current time . . . . . . . . . . . . . . . :                02:29:12
    Day of week  . . . . . . . . . . . . . . . . :   DAYOFWEEK    *FRI
    Time zone  . . . . . . . . . . . . . . . . . :   TIMZON       QP0100CET2
      Offset . . . . . . . . . . . . . . . . . . :   TIMOFFSET      +01:00
      Full name  . . . . . . . . . . . . . . . . :   TIMZONFULL     Central European Time
      Abbreviated name . . . . . . . . . . . . . :   TIMZONABBR     CET
    Year offset  . . . . . . . . . . . . . . . . :   YEAROFS      0
    Job switches . . . . . . . . . . . . . . . . :   SWS          00000000
    Inquiry message reply  . . . . . . . . . . . :   INQMSGRPY    *DFT
    Accounting code  . . . . . . . . . . . . . . :   ACGCDE       *SYS
    Print text . . . . . . . . . . . . . . . . . :   PRTTXT       '                              '
    DDM conversation . . . . . . . . . . . . . . :   DDMCNV       *KEEP
    Break message handling . . . . . . . . . . . :   BRKMSG       *NORMAL
    Status message . . . . . . . . . . . . . . . :   STSMSG       *NORMAL
    Device recovery action . . . . . . . . . . . :   DEVRCYACN    *MSG
    Time slice end pool  . . . . . . . . . . . . :   TSEPOOL      *NONE
    Print key format . . . . . . . . . . . . . . :   PRTKEYFMT    *PRTHDR
  5770SS1 V7R3M0 160422                      Display Job                                          7-12-18  2:29:12         Page   3
  Job . . . :   QP0ZSPWP     User . . . :   QSECOFR       Number . . . . :   293820
    Sort sequence  . . . . . . . . . . . . . . . :   SRTSEQ       *HEX
      Library  . . . . . . . . . . . . . . . . . :
    Language identifier  . . . . . . . . . . . . :   LANGID       DAN
    Country or region identifier . . . . . . . . :   CNTRYID      DK
    Coded character set ID . . . . . . . . . . . :   CCSID        500
    Default coded character set ID . . . . . . . :   DFTCCSID     500
    Job message queue maximum size . . . . . . . :   JOBMSGQMX    4
    Job message queue full action  . . . . . . . :   JOBMSGQFL    *WRAP
    Allow multiple threads . . . . . . . . . . . :   ALWMLTTHD    *NO
    Decimal format . . . . . . . . . . . . . . . :   DECFMT       J
    Character identifier control . . . . . . . . :   CHRIDCTL     *JOBCCSID
    Auxiliary storage pool group . . . . . . . . :   ASPGRP       *NONE
    Spooled file action  . . . . . . . . . . . . :   SPLFACN      *DETACH
    Workload group . . . . . . . . . . . . . . . :   WLCGRP       *NONE
    Processor resources priority . . . . . . . . :   PRCRSCPTY    *SYSCTL
                                         Job Run Attributes
    Run priority  . . . . . . . . . . . . . . . . . . . . :   RUNPTY       50
    Time slice in milliseconds  . . . . . . . . . . . . . :   TIMESLICE    2000
    Eligible for purge  . . . . . . . . . . . . . . . . . :   PURGE        *YES
    Default wait time in seconds  . . . . . . . . . . . . :   DFTWAIT      30
    Maximum CPU time in milliseconds  . . . . . . . . . . :   CPUTIME      *NOMAX
      CPU time used . . . . . . . . . . . . . . . . . . . :                73
    Maximum temporary storage in megabytes  . . . . . . . :   MAXTMPSTG    *NOMAX
      Temporary storage used  . . . . . . . . . . . . . . :                13
      Peak temporary storage used . . . . . . . . . . . . :                63
    Maximum threads . . . . . . . . . . . . . . . . . . . :   MAXTHD       *NOMAX
      Threads . . . . . . . . . . . . . . . . . . . . . . :                1
    Thread resources affinity:                                THDRSCAFN
      Group . . . . . . . . . . . . . . . . . . . . . . . :                *NOGROUP
      Level . . . . . . . . . . . . . . . . . . . . . . . :                *NORMAL
    Resources affinity group  . . . . . . . . . . . . . . :   RSCAFNGRP    *NO
  5770SS1  V7R3M0   160422                   Display Job                                          7-12-18  2:29:12         Page   4
  Job . . . :   QP0ZSPWP    User . . . :   QSECOFR    Number . . . . :   293820
                                                      Spooled Output Files
             Device or                    Total   Cur                                         File
  File       Queue      User Data  Status Pages  Page Copies Form Type  Pty Date     Time     Nbr    Queue      Library
      No spooled output files.
                                                Job Call Stack
  Thread  . :   00000286
                                                                                                     Module or              Ctl
  Type Program                 Statement Identifiers    Instruction      Activation Group            Expanded Type          Bdy
       QP0ZSPWP   QSYS                                                   *DFTACTGRP 0000000000000001 QP0ZSPWP   QBUILDSS1    Y
          Procedure: _CXX_PEP__Fv
       QP0ZPCPN   QSYS         132                                       *DFTACTGRP 0000000000000001 QP0ZPCPN   QBUILDSS1    N
          Procedure: Qp0zPJNewProcess
       QP0ZPCPN   QSYS         278                                       *DFTACTGRP 0000000000000001 QP0ZPCPN   QBUILDSS1    N
          Procedure: Qp0zNewProcess
       QZSHCHLD   QSHELL                                                 *NEW       0000000000000012 QZSHCHLD   QBUILDSS1    Y
          Procedure: _CXX_PEP__Fv
       QZSHCHLD   QSHELL       6                                         *NEW       0000000000000012 QZSHCHLD   QBUILDSS1    N
          Procedure: main
       QZSHSRV1   QSHELL       148                                       *NEW       0000000000000012 QZSHMAIN   QBUILDSS1    N
          Procedure: QzshChildMain
       QZSHSRV1   QSHELL       172                                       *NEW       0000000000000012 QZSHEVAL   QBUILDSS1    N
          Procedure: evalcmdpart2__FP4nodeiP7backcmd8cmdentryT2PPc7arglist
       QZSHSRV1   QSHELL       1                                         *NEW       0000000000000012 QZSHEXEC   QBUILDSS1    N
          Procedure: shellexec__FPcPPcT2
       QP0ZEXEC   QSYS         47                                        *NEW       0000000000000012 QP0ZEXEC   QBUILDSS1    N
          Procedure: Qp0zExecve
  5770SS1 V7R3M0 160422                      Display Job                                          7-12-18  2:29:12         Page   5
  Job . . . :   QP0ZSPWP     User . . . :   QSECOFR       Number . . . . :   293820
       QP0ZEXEC   QSYS         6                                         *NEW       0000000000000012 QP0ZEXECUT QBUILDSS1    N
          Procedure: run__14Qp0zExecutableFv
       SYSTEM     QSHELL                                                 *NEW       0000000000000013 QZSHSYSTEM QBUILDSS1    Y
          Procedure: _CXX_PEP__Fv
       SYSTEM     QSHELL       74                                        *NEW       0000000000000013 QZSHSYSTEM QBUILDSS1    N
          Procedure: main
       SYSTEM     QSHELL       80                                        *NEW       0000000000000013 QZSHSYSTEM QBUILDSS1    N
          Procedure: ProcessCmd__FiPPc
       QCAPCMD    QSYS                                              016E *DFTACTGRP 0000000000000001                         N
       EXECLISTR  NOXDB2                                                 QILE       0000000000000014 EXECLISTR  QTEMP        Y
          Procedure: _QRNP_PEP_EXECLISTR
       EXECLISTR  NOXDB2       2300                                      QILE       0000000000000014 EXECLISTR  QTEMP        N
          Procedure: EXECLISTR
       QC2SYS     QSYS         13                                        QILE       0000000000000014 QC2SYS     QBUILDSS1    N
          Procedure: system
       QCMDEXC    QSYS                                              012F *DFTACTGRP 0000000000000001                         N
                                             Job Locks
  Job Status . . . . . . . :  ACTIVE
                               Object                                    Member        ASP
   Object        Library       Type          Lock          Status        Locks         Device        Scope         Thread
   NLI           QSYS          *USRPRF       *SHRRD        HELD                                      *JOB
                                             *SHRRD        HELD                                      *JOB
                                             *SHRRD        HELD                                      *JOB
   NOXDB2        QSYS          *LIB          *SHRRD        HELD                                      *JOB
   QGPL          QSYS          *LIB          *SHRRD        HELD                                      *JOB
   QHLPSYS       QSYS          *LIB          *SHRRD        HELD                                      *JOB
   QPDSPJOB      QSYS          *FILE-PRT     *SHRNUP       HELD                                      *JOB
   QPGMR         QSYS          *USRPRF       *SHRRD        HELD                                      *JOB
                                             *SHRRD        HELD                                      *JOB
                                             *SHRRD        HELD                                      *JOB
   QSHELL        QSYS          *LIB          *SHRRD        HELD                                      *JOB
   QSYS          QSYS          *LIB          *SHRRD        HELD                                      *JOB
  5770SS1 V7R3M0 160422                      Display Job                                          7-12-18  2:29:12         Page   6
  Job . . . :   QP0ZSPWP     User . . . :   QSECOFR       Number . . . . :   293820
                               Object                                    Member        ASP
   Object        Library       Type          Lock          Status        Locks         Device        Scope         Thread
   QSYS2         QSYS          *LIB          *SHRRD        HELD                                      *JOB
   QTEMP         QSYS          *LIB          *SHRRD        HELD                                      *JOB
   QUSRSYS       QSYS          *LIB          *SHRRD        HELD                                      *JOB
   Q04079N008    QSPL          *FILE-PHY     *SHRRD        HELD          YES                         *JOB
                                          Job Member Locks
   File . . . . :   Q04079N008     Library . . . . . : QSPL           Type . . . . :   PHY            ASP device . . :   *SYSBAS
                  Lock
   Member         Type            Lock            Status                          Scope           Thread
   Q119549211     MBR             *SHRRD          HELD                            *JOB
                  DATA            *SHRUPD         HELD                            *JOB
                                          Job Record Locks
                                                 Record
  File        Library     Member                 Number    Status
    (Job has no record locks)
                                           Job Library List
                           ASP
    Library     Type       Device      Text
    QSYS        SYS                    System Library
    QSYS2       SYS                    System Library for CPI's
    QHLPSYS     SYS
    QUSRSYS     SYS                    System Library for Users
    QSHELL      PRD
    NOXDB2      USR                    Nox.DB build library
    QGPL        USR                    General Purpose Library
    QTEMP       USR
  5770SS1 V7R3M0 160422                      Display Job                                          7-12-18  2:29:12         Page   7
  Job . . . :   QP0ZSPWP     User . . . :   QSECOFR       Number . . . . :   293820
                                              Open Files
  Number of open data paths . . . . . . . . . . :      1
                          Member/     Record      File     I/O   ---Open----  Relative
  File        Library     Device      Format      Type    Count  Opt Shr-Nbr   Record   Scope       Activation Group
  QPDSPJOB    QSYS        *SPOOL      OPENFILC    PRT       160  O   JA   1             *ACTGRPDFN  *DFTACTGRP 0000000000000002
                                            All File Overrides
  Call level  . . . . . . . . . . . . . :   *
  File           Level   Type  Keyword Specifications
  *PRTF           *JOB   PRT   SPOOL(*YES) HOLD(*YES) USRDTA(0000118073) SPLFOWN(*CURUSRPRF)
                                     Commitment Control Status
  (No commitment definitions are active)
                                   Display Communications Status
  ---------Communications---------  --------Number of operations---------
  Identifier        Method               Output        Input        Other  Operation
      (No communications identifiers are active)
                                             Job Activation Groups
  -------Activation Group--------
  Name           Number             In Use Indicator   Program      Library
  *DFTACTGRP     0000000000000001      Y
  *DFTACTGRP     0000000000000002      Y
  QILE           0000000000000014      Y               EXECLISTR    NOXDB2
  QLGLOCAL       0000000000000011      N               QLGLOCAL     QSYS
  QTESAGRP       0000000000000016      N               QTECRTVS     QSYS
  QTESTIFC       0000000000000017      N               QTETSIFC     QSYS
  5770SS1 V7R3M0 160422                      Display Job                                          7-12-18  2:29:12         Page   8
  Job . . . :   QP0ZSPWP     User . . . :   QSECOFR       Number . . . . :   293820
  18             0000000000000012      Y               QZSHCHLD     QSHELL
  19             0000000000000013      Y               SYSTEM       QSHELL
                                              Job Mutexes
  Mutex
  Status           Mutex
    (Job has no mutexes)
                                                Threads
                                        Total        Aux         Run
  Thread         Name        Status      CPU         I/O       Priority
 00000286                    RUN           0,075        556       50
                                            MLB attributes
 Library           Resource            Initial mount      End of volume mount
 Device       allocation priority        wait time             wait time
    (No MLB attributes list available .)
                                       Environment variables
  Name                                    Value                                                                             CCSID
  JAVA_HOME                               '/QopenSys/QIBM/ProdData/JavaVM/jdk80/32bit'                                        500
  PASE_PATH                               '/QOpenSys/usr/bin:/usr/ccs/bin:/QOpenSys/usr/bin/X11:/usr/sbin:.:/usr/bin'         500
  PASE_SHELL                              '/QOpenSys/QIBM/ProdData/OPS/tools/bin/bash'                                        500
  ILE_DEBUGGER_1                          'ALLOW_WIDE_SCREEN'                                                                 500
  QIBM_USE_DESCRIPTOR_STDIO               'Y'                                                                                 500
  PASE_LANG                               'da_DK'                                                                             500
  QIBM_PASE_CCSID                         '819'                                                                               500
  PASE_LOCPATH                            '/usr/lib/nls/loc'                                                                  500
  PASE_NLSPATH                            '/usr/lib/nls/msg/%L/%N:/usr/lib/nls/msg/%L/%N.cat'                                 500
  PASE_LC__FASTMSG                        'true'                                                                              500
  PASE_TZ                                 '<CET>-1<CEST>,M3.5.0,M10.5.0'                                                      500
  QIBM_IFS_OPEN_MAX                       '66000'                                                                             500
  5770SS1 V7R3M0 160422                      Display Job                                          7-12-18  2:29:12         Page   9
  Job . . . :   QP0ZSPWP     User . . . :   QSECOFR       Number . . . . :   293820
  Name                                    Value                                                                             CCSID
  LANG                                    '/QSYS.LIB/DA_DK.LOCALE                            '                                500
  SRC                                     'examples/ex01Demo.rpgle'                                                           500
  LOGIN                                   'nli'                                                                               500
  SSH_TTY                                 '/dev/pts/0'                                                                        500
  MAKEFLAGS                               ' -- SRC=examples/ex01Demo.rpgle MOD=ex01Demo'                                      500
  MAIL                                    '/var/spool/mail/nli'                                                               500
  MAKEOVERRIDES                           '${-*-command-variables-*-}'                                                        500
  USER                                    'nli'                                                                               500
  MAKELEVEL                               '1'                                                                                 500
  SSH_CONNECTION                          '192.168.7.134 57166 10.1.31.153 22'                                                500
  SSH_CLIENT                              '192.168.7.134 57166 22'                                                            500
  TERM                                    'xterm-256color'                                                                    500
  MOD                                     'ex01Demo'                                                                          500
  MFLAGS                                  ''                                                                                  500
  TZ                                      '<CET>-1<CEST>,M3.5.0,M10.5.0'                                                      500
  TRACEOPT                                'UNLINK'                                                                            500
  QIBM_DESCRIPTOR_STDERR                  'CRLN=N'                                                                            500
  QIBM_DESCRIPTOR_STDOUT                  'CRLN=N'                                                                            500
  QIBM_DESCRIPTOR_STDIN                   'CRLN=Y'                                                                            500
  LOGNAME                                 'nli'                                                                               500
  SHLVL                                   '1'                                                                                 500
  HOSTTYPE                                'powerpc'                                                                           500
  HOSTID                                  '10.1.31.153'                                                                       500
  HOSTNAME                                'DKSRV133.SYSMET'                                                                   500
  OSTYPE                                  'os400'                                                                             500
  MACHTYPE                                'powerpc-ibm-os400'                                                                 500
  TERMINAL_TYPE                           'PIPELINE'                                                                          500
  HOME                                    '/home/NLI'                                                                         500
  OLDPWD                                  '/home/NLI'                                                                         500
  PWD                                     '/prj/noxdbutf8'                                                                    500
  _                                       'NOXDB2'                                                                            500
  PATH                                    '/usr/bin:.:/QOpenSys/usr/bin'                                                      500
                           * * * * *  E N D  O F  L I S T I N G  * * * * *
